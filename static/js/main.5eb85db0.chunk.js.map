{"version":3,"sources":["engine/types.ts","pages/docs/markdown/index.tsx","pages/docs/controllers/Rest.tsx","pages/docs/DataTypes.tsx","pages/docs/GettingStarted.tsx","pages/docs/LifeCycle.tsx","pages/docs/index.tsx","controller/adapters/rest.tsx","controller/types.ts","pages/game/ControllerCreator.tsx","pages/game/Run.tsx","engine/PositionPool.ts","engine/utils.ts","engine/game.ts","pages/game/index.tsx","pages/game/Setup.tsx","store/download.ts","store/history.ts","pages/game/Summary.tsx","pages/Home.tsx","pages/parts/Content.tsx","pages/parts/Footer.tsx","pages/parts/Header.tsx","pages/Tester.tsx","theme.ts","viewer/Canvas.tsx","viewer/Snapshot.tsx","viewer/Viewer.tsx","pages/Viewer.tsx","App.tsx","index.tsx"],"names":["GameResult","Move","Text","Typography","Title","markdownComponentsMap","h1","props","level","h2","h3","h4","h5","h6","p","MD","text","children","components","Paragraph","commonTypes","key","dataType","description","example","payloadTypes","name","properties","Content","Layout","Sider","contents","title","display","component","to","commonTypesRender","sort","a","b","localeCompare","map","type","code","strong","payloadTypesRender","payload","data","dataSource","pagination","Column","dataIndex","render","val","ItemRoute","allRoutes","dfs","parentUrl","forEach","push","path","url","DocsPage","useRouteMatch","itemMenus","createItemMenus","cont","u","c","icon","SubMenu","Item","itemRoutes","width","mode","style","height","multiple","className","margin","paddingTop","axiosOptions","headers","timeout","RestController","init","params","playerNumber","axios","post","response","update","state","end","this","RestControllerFactory","Selector","onChange","onChangeCallback","useCallback","e","target","value","label","prefix","GlobalOutlined","create","isController","controller","availableFactories","ControllerCreator","onControllerChange","onNext","useState","factoriesWithID","setFactoriesWithID","controllers","useMemo","selectorChange","pos","factory","filter","selectorFields","align","DeleteOutlined","onClick","undefined","selectorCreateButtons","PlusOutlined","uniqueId","placement","disabled","length","RunStage","isPos","Array","isArray","PositionPool","gameState","pool","generatePool","positions","meta","foodPositions","gridSize","taken","flatten","concat","fill","_","i","Math","floor","some","t","isEqual","next","random","splice","empty","gameHistorySummarise","history","lastFrame","winnerCount","playersAlive","result","TIMEOUT","WINNER","DRAW","winner","findIndex","ticks","h","omit","timeStamp","Date","toISOString","tickCount","defaultOptions","maxTicks","Game","options","onGameTick","controllersReady","initState","Promise","all","gameId","playerCount","every","r","Error","JSON","stringify","allStates","tick","copy","cloneDeep","catch","newState","lastMoves","uuidv4","posPool","NOP","controllerMoves","apply","oldState","newHeads","move","player","notification","error","message","duration","currentHead","moveVec","NORTH","SOUTH","EAST","WEST","moveToVector2d","head","bounds","eatenFoodIndex","Set","collides","add","pop","allBodies","flat","unshift","positionPool","has","SetupStage","Run","onTickUpdate","tickProgress","round","setState","onCancel","onPrev","stateUpdate","g","runStage","game","CONTROLLER_INIT","initControllers","then","GAME_RUN","err","ERROR_STATE","errorTitle","errorDesc","run","gameComplete","GAME_OVER","statusMessage","showIcon","UNSET","prevState","body","progressStatus","direction","justifyContent","alignItems","percent","status","size","danger","React","Component","GameSetup","onConfigChange","setGridSize","setMaxTicks","changeCallback","onMaxTicksChange","onGridSizeChange","useEffect","min","max","defaultValue","createDownloadHref","gameHistory","jsonBlob","Blob","href","URL","createObjectURL","download","historyStore","localforage","createInstance","addHistory","setItem","getHistories","keys","getItem","histories","deleteHistory","removeItem","deleteAllHistories","clear","Panel","Collapse","Summary","downloadProps","TrophyOutlined","MehOutlined","HourglassOutlined","EyeOutlined","DownloadOutlined","header","Step","Steps","GameRunner","CONTROLLER_CREATOR","currentStage","setCurrentStage","setControllers","setOptions","setGameHistory","creatorCallback","completeCallback","nextCallback","SUMMARY","prevCallback","current","GAME_SETUP","PLAYING","HomePage","ContentPart","Footer","FooterPart","Header","HeaderPart","theme","TabPane","Tabs","dummyId","sampleIniData","sampleStateData","ControllerTesterPage","setController","setResponse","sendData","setSendData","loaderCallback","iniTestCallback","stateTestCallback","endTestCallback","defaultActiveKey","tab","gutter","span","contrastColours","getColour","number","CANVAS_SIZE","posToCanvas","partSize","Canvas","canvasRef","useRef","useLayoutEffect","canvas","ctx","getContext","clearRect","lineWidth","strokeStyle","strokeRect","clearCanvas","snake","colour","headX","headY","lineCap","beginPath","moveTo","x","y","lineTo","stroke","drawSnake","fillStyle","arc","PI","drawFood","ref","StateSnapshot","frame","playerData","alive","lastMove","position","backgroundColor","CheckCircleOutlined","CloseCircleOutlined","ellipsis","Viewer","setTick","sliderChange","justify","marginLeft","marginRight","DeleteAllModal","onDelete","openModal","Modal","warning","closable","okText","okCancel","okButtonProps","content","onOk","ViewerPage","routerHistory","useHistory","loadedHistories","setLoadedHistories","loadedHistory","setLoadedHistory","query","URLSearchParams","useLocation","search","loadHistories","id","get","selected","find","deleteAll","deleteSingleHistory","columns","sorter","compare","valueOf","toString","record","color","humanDate","rest","pageSize","showTotal","total","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eb85db0.chunk.js","sourcesContent":["export type GameOptions = {\r\n  gridSize: number;\r\n  maxTicks: number;\r\n};\r\n\r\nexport enum GameResult {\r\n  DRAW = \"DRAW\",\r\n  WINNER = \"WINNER\",\r\n  TIMEOUT = \"TIMEOUT\",\r\n}\r\n\r\nexport type MetalessGameState = Omit<GameState, \"meta\">;\r\nexport type GameHistory = {\r\n  tickCount: number;\r\n  ticks: MetalessGameState[];\r\n  winner: number | null;\r\n  result: GameResult;\r\n  gridSize: number;\r\n  playerCount: number;\r\n  gameId: string;\r\n  timeStamp: string;\r\n};\r\n\r\nexport type GameOptionsOptionals = {};\r\n\r\nexport enum Move {\r\n  NORTH = \"N\",\r\n  SOUTH = \"S\",\r\n  EAST = \"E\",\r\n  WEST = \"W\",\r\n  NOP = \"X\",\r\n}\r\n\r\nexport type Pos = [number, number];\r\n\r\nexport type GameState = {\r\n  tick: number;\r\n  positions: Array<Pos[]>;\r\n  foodPositions: Pos[];\r\n  playersAlive: boolean[];\r\n  lastMoves: Move[];\r\n  meta: {\r\n    gridSize: number;\r\n    playerCount: number;\r\n    gameId: string;\r\n  };\r\n};\r\n\r\nexport const isPos = (pos: any): pos is Pos => {\r\n  return Array.isArray(pos) && pos.length === 2;\r\n};\r\n","import { Typography } from \"antd\";\r\nimport ReactMarkdown, { Options } from \"react-markdown\";\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst markdownComponentsMap: Options[\"components\"] = {\r\n  h1: (props: any) => <Title level={1} {...props} />,\r\n  h2: (props: any) => <Title level={2} {...props} />,\r\n  h3: (props: any) => <Title level={3} {...props} />,\r\n  h4: (props: any) => <Title level={4} {...props} />,\r\n  h5: (props: any) => <Title level={5} {...props} />,\r\n  h6: (props: any) => <Title level={6} {...props} />,\r\n  p: (props: any) => <Text {...props} />,\r\n};\r\n\r\nexport type MDProps = {\r\n  text: string;\r\n};\r\n\r\nexport const MD: React.FunctionComponent<MDProps> = ({ text }) => {\r\n  return <ReactMarkdown children={text} components={markdownComponentsMap} />;\r\n};\r\n\r\nexport const fromMarkdown = (markdown: string) => {\r\n  return <MD text={markdown} />;\r\n};\r\n","import {\r\n    Button,\r\n    Typography\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MD } from \"../markdown\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport const RestDocs: React.FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <Title level={2}>REST API</Title>\r\n      <Paragraph>\r\n        <Button type=\"link\">\r\n          <Link to=\"/tester\">Go to controller tester</Link>\r\n        </Button>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The REST controller is an controller that relies on HTTP GET/POST\r\n        requests. The benefits of this controller are that it is completely\r\n        language agnostic. Disadvantages are that HTTP requests add a slower\r\n        overhead for every game tick.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The REST controller follows the same pattern as with all controllers,\r\n        except the endpoints are slightly tailored to the REST API. There is a 2\r\n        second timeout on all requests.\r\n      </Paragraph>\r\n      <Title level={3}>Initialisation Payload</Title>\r\n      <Paragraph>\r\n        <MD\r\n          text={\r\n            \"The initialisation of a REST controller is done through a POST request to `/init`. An additional query parameter `playerNumber` is always included to specify the player number. Example: `http://localhost:8000/init?playerNumber=2`\"\r\n          }\r\n        />\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The POST request's body will include a JSON of the{\" \"}\r\n        <Link to=\"docs/data-types\">Initialiser Payload</Link>.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The game expects a 200 OK response, but any body returned will be\r\n        ignored.\r\n      </Paragraph>\r\n\r\n      <Title level={3}>Game Update</Title>\r\n      <Paragraph>\r\n        For every game tick, the controller will be queried and is expected to\r\n        return a <Link to=\"docs/data-types\">Move</Link>.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        <MD\r\n          text={\r\n            \"A POST request is sent to `/update`. An additional query parameter `playerNumber` is always included to specify the player number. Example: `http://localhost:8000/update?playerNumber=2`\"\r\n          }\r\n        />\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The POST request's body will include a JSON of the{\" \"}\r\n        <Link to=\"docs/data-types\">GameState Payload</Link>.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The game expects a 200 OK response, as well as a plain text{\" \"}\r\n        <Link to=\"docs/data-types\">Move</Link> response.\r\n      </Paragraph>\r\n      <Title level={3}>Cleanup</Title>\r\n      <Paragraph>\r\n        At the end of the game, the controller is sent a final \"shutdown\" or\r\n        \"cleanup\" request to assist in the cleanup of the controller.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        <MD\r\n          text={\r\n            \"A POST request is sent to `/end`. An additional query parameter `playerNumber` is always included to specify the player number. Example: `http://localhost:8000/end?playerNumber=2`\"\r\n          }\r\n        />\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The POST request's body will include a JSON of the{\" \"}\r\n        <Link to=\"docs/data-types\">GameState Payload</Link> but nothing is\r\n        expected to be done with it.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The game does not expect any response. Any response will be ignored.\r\n      </Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n    Divider,\r\n    Table,\r\n    Typography\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { MD } from \"./markdown\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\ntype CommonType = {\r\n  key: string;\r\n  dataType: string;\r\n  description: string;\r\n  example?: string;\r\n};\r\n\r\nconst commonTypes: CommonType[] = [\r\n  {\r\n    key: \"Pos\",\r\n    dataType: \"number[]\",\r\n    description:\r\n      \"An array of exactly length two, describing a position of something within a game.\",\r\n    example: \"[1,2]\",\r\n  },\r\n  {\r\n    key: \"Move\",\r\n    dataType: `\"N\" | \"S\" | \"E\" | \"W\" | \"X\"`,\r\n    description:\r\n      \"A cardinal direction, often used to denote directions of a player move. `X` is used to denote a no-operation (NOP), sometimes used when an error has occurred\",\r\n  },\r\n  {\r\n    key: \"GameResult\",\r\n    dataType: `\"DRAW\" | \"WINNER\" | \"TIMEOUT\"`,\r\n    description:\r\n      \"Result of a game. `TIMEOUT` is when a game exceeds the max allocated ticks. `DRAW` is when there is no single surviving player (eg, players crash into each other simultaneously)\",\r\n  },\r\n];\r\n\r\ntype PayloadType = {\r\n  name: string;\r\n  description: string | React.ReactElement;\r\n  properties: CommonType[];\r\n};\r\n\r\nconst payloadTypes: PayloadType[] = [\r\n  {\r\n    name: \"Initialiser Payload\",\r\n    description:\r\n      \"The first payload sent to any controller when the game is first starting\",\r\n    properties: [\r\n      {\r\n        key: \"gameId\",\r\n        dataType: \"string\",\r\n        description: \"Unique identifier of the game\",\r\n      },\r\n      {\r\n        key: \"gridSize\",\r\n        dataType: \"number\",\r\n        description: \"Size of the game grid. Game grid is always a square.\",\r\n      },\r\n      {\r\n        key: \"playerCount\",\r\n        dataType: \"number\",\r\n        description:\r\n          \"Number of players in the game. Includes all alive and dead.\",\r\n      },\r\n      {\r\n        key: \"playerNumber\",\r\n        dataType: \"number\",\r\n        description:\r\n          \"The number identifier of the player which the controller will be able to control\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"GameState.meta\",\r\n    description:\r\n      \"Additional information provided with each game state, which is common across the entire game. Provided for convenience.\",\r\n    properties: [\r\n      {\r\n        key: \"gameId\",\r\n        dataType: \"string\",\r\n        description: \"Unique identifier of the game\",\r\n      },\r\n      {\r\n        key: \"gridSize\",\r\n        dataType: \"number\",\r\n        description: \"Size of the game grid. Game grid is always a square.\",\r\n      },\r\n      {\r\n        key: \"playerCount\",\r\n        dataType: \"number\",\r\n        description:\r\n          \"Number of players in the game. Includes all alive and dead.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"GameState\",\r\n    description:\r\n      \"The current state of the game. Think of it as a slice of the full game.\",\r\n    properties: [\r\n      {\r\n        key: \"tick\",\r\n        dataType: \"number\",\r\n        description: \"Current tick of the game\",\r\n      },\r\n      {\r\n        key: \"positions\",\r\n        dataType: \"Pos[][]\",\r\n        description:\r\n          \"Positions of all players in the game. `positions[i]` is all parts of player `i`. `positions[i][0]` is the head of player `i`.\",\r\n      },\r\n      {\r\n        key: \"foodPositions\",\r\n        dataType: \"Pos[]\",\r\n        description: \"Position of all food items on the grid\",\r\n      },\r\n      {\r\n        key: \"playersAlive\",\r\n        dataType: \"boolean[]\",\r\n        description:\r\n          \"Alive status of all players. `playersAlive[i]` would be `true` if player `i` was still alive and in the game.\",\r\n      },\r\n      {\r\n        key: \"lastMoves\",\r\n        dataType: \"Move[]\",\r\n        description: \"The Move of all players in the previous game tick\",\r\n      },\r\n      {\r\n        key: \"meta\",\r\n        dataType: \"GameState.meta\",\r\n        description: \"See `GameState.meta`\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const DataTypes: React.FunctionComponent = () => {\r\n  const commonTypesRender = commonTypes\r\n    .sort((a, b) => a.key.localeCompare(b.key))\r\n    .map((type) => {\r\n      return (\r\n        <div key={type.key}>\r\n          <Title level={4} code>\r\n            {type.key}\r\n          </Title>\r\n          <Paragraph>\r\n            <blockquote>\r\n              <Paragraph>\r\n                <Text strong>Type:</Text> <Text code>{type.dataType}</Text>\r\n              </Paragraph>\r\n              <MD text={type.description} />\r\n              {type.example && (\r\n                <Paragraph>\r\n                  <Text strong>Example:</Text> <Text code>{type.example}</Text>\r\n                </Paragraph>\r\n              )}\r\n            </blockquote>\r\n          </Paragraph>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const payloadTypesRender = payloadTypes\r\n    .sort((a, b) => a.name.localeCompare(b.name))\r\n    .map((payload) => {\r\n      const data = payload.properties.sort((a, b) =>\r\n        a.key.localeCompare(b.key)\r\n      );\r\n      return (\r\n        <div key={payload.name}>\r\n          <Title level={4}>{payload.name}</Title>\r\n          <Paragraph>\r\n            <blockquote>\r\n              <Paragraph>{payload.description}</Paragraph>\r\n              <Table dataSource={data} pagination={false}>\r\n                <Table.Column\r\n                  title=\"Name\"\r\n                  dataIndex=\"key\"\r\n                  key=\"key\"\r\n                  render={(val) => <Text code>{val}</Text>}\r\n                />\r\n                <Table.Column\r\n                  title=\"Type\"\r\n                  dataIndex=\"dataType\"\r\n                  key=\"dataType\"\r\n                  render={(val) => <Text code>{val}</Text>}\r\n                />\r\n                <Table.Column\r\n                  title=\"Description\"\r\n                  dataIndex=\"description\"\r\n                  key=\"description\"\r\n                  render={(val) => <MD text={val} />}\r\n                />\r\n              </Table>\r\n            </blockquote>\r\n          </Paragraph>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}>Data Types</Title>\r\n      <Divider>\r\n        <Title level={3}>Common Types</Title>\r\n      </Divider>\r\n\r\n      {commonTypesRender}\r\n      <Divider>\r\n        <Title level={3}>Payloads</Title>\r\n      </Divider>\r\n      {payloadTypesRender}\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\n// - Getting started\r\n// - API / Types\r\n// - Game physics\r\n// - Game life cycle\r\n// - Controllers\r\n//   - REST\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport const GettingStarted: React.FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <Title level={2}>Getting Started</Title>\r\n      <Paragraph>TBC</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport const LifeCycle: React.FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <Title level={2}>Life Cycle</Title>\r\n      <Paragraph>\r\n        A game takes place over 3 stages.{\" \"}\r\n        <ol>\r\n          <li>Controller initialisation</li>\r\n          <li>Game execution</li>\r\n          <li>Cleanup</li>\r\n        </ol>\r\n      </Paragraph>\r\n      <Title level={3}>Controller setup</Title>\r\n      <Paragraph>\r\n        When a game is first started, all controllers are initialised. This\r\n        allows the game to check the controllers are alive, but also gives\r\n        opportunities to the controllers to initialise their game state. Each\r\n        controller is sent the{\" \"}\r\n        <Link to=\"/docs/data-types\">Initialisation Payload</Link>. If a\r\n        controller fails to respond, the game does not start.\r\n      </Paragraph>\r\n      <Title level={3}>Game execution</Title>\r\n      <Paragraph>\r\n        A game continues until there are one or less players left alive, or\r\n        until the game reaches the specified number of ticks. If there is only\r\n        one player left, the game is considered a win for the remaining player.\r\n        If there is less than one player left, the game is considered a draw for\r\n        all players. If there is more than one player left, ie, reached the\r\n        specified number of ticks, the game is considered a draw.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        The game loop follows the same pattern every tick\r\n        <ol>\r\n          <li>Check end game conditions</li>\r\n          <li>Fetch all controllers moves</li>\r\n          <li>Apply moves to game state</li>\r\n        </ol>\r\n        If a player has died, the player's corresponding controller will no\r\n        longer receive requests for moves until the final cleanup stage.\r\n      </Paragraph>\r\n      <Title level={3}>Cleanup</Title>\r\n      <Paragraph>\r\n        After the game has ended, all controllers are sent the a cleanup\r\n        message, which includes the <Link to=\"/docs/data-types\">GameState</Link>\r\n        . This allows the controllers to clean up their game state or shutdown\r\n        any long running processes.\r\n      </Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n    Layout,\r\n    Menu,\r\n    Typography\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport {\r\n    Link,\r\n    Route,\r\n    Switch,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { RestDocs } from \"./controllers/Rest\";\r\nimport { DataTypes } from \"./DataTypes\";\r\nimport { GettingStarted } from \"./GettingStarted\";\r\nimport { LifeCycle } from \"./LifeCycle\";\r\n\r\nconst { Title } = Typography;\r\nconst { Content, Sider } = Layout;\r\n\r\ntype ContentsItem = {\r\n  title: string;\r\n  key: string;\r\n  component?: React.ComponentType<any>;\r\n  children?: ContentsItem[];\r\n  icon?: JSX.Element;\r\n  display?: boolean;\r\n};\r\n\r\nconst contents: ContentsItem[] = [\r\n  {\r\n    title: \"Getting started\",\r\n    key: \"getting-started\",\r\n    display: false,\r\n    component: GettingStarted,\r\n  },\r\n  { title: \"Life cycle\", key: \"life-cycle\", component: LifeCycle },\r\n  { title: \"Data Types\", key: \"data-types\", component: DataTypes },\r\n  {\r\n    title: \"Controllers\",\r\n    key: \"controllers\",\r\n    children: [{ title: \"REST\", key: \"rest\", component: RestDocs }],\r\n  },\r\n];\r\n\r\ntype ItemMenusProps = { contents: ContentsItem[]; url: string };\r\ntype ItemRouteProps = { contents: ContentsItem[]; url: string };\r\nconst ItemRoute: React.FunctionComponent<ItemRouteProps> = (props) => {\r\n  const allRoutes: JSX.Element[] = [];\r\n  const dfs = (contents: ContentsItem[], parentUrl: string) => {\r\n    contents.forEach(({ children, key, component }) => {\r\n      if (children) {\r\n        dfs(children, `${parentUrl}/${key}`);\r\n      } else if (component) {\r\n        allRoutes.push(\r\n          <Route\r\n            key={`route-${key}`}\r\n            path={`${parentUrl}/${key}`}\r\n            component={component}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  dfs(props.contents, props.url);\r\n  return <>{allRoutes}</>;\r\n};\r\n\r\nexport const DocsPage: React.FunctionComponent = () => {\r\n  let { url } = useRouteMatch();\r\n  const createItemMenus = ({ contents: cont, url: u }: ItemMenusProps) => {\r\n    const c = cont.map(({ children, title, key, icon, component, display }) => {\r\n      if (display === false) {\r\n        return null;\r\n      } else if (children) {\r\n        return (\r\n          <Menu.SubMenu key={key} title={title} icon={icon}>\r\n            {createItemMenus({ contents: children, url: `${u}/${key}` })}\r\n          </Menu.SubMenu>\r\n        );\r\n      } else if (component) {\r\n        return (\r\n          <Menu.Item key={`${u}/${key}`} icon={icon}>\r\n            <Link to={`${u}/${key}`}>{title}</Link>\r\n          </Menu.Item>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n    return <>{c}</>;\r\n  };\r\n\r\n  const itemMenus = createItemMenus({ contents, url });\r\n  const itemRoutes = <ItemRoute contents={contents} url={url} />;\r\n\r\n  return (\r\n    <>\r\n      <Title>Docs</Title>\r\n      <Layout>\r\n        <Sider width={200}>\r\n          <Menu mode=\"inline\" style={{ height: \"100%\" }} multiple={false}>\r\n            {itemMenus}\r\n          </Menu>\r\n        </Sider>\r\n        <Content className=\"content\" style={{ margin: 0, paddingTop: 0 }}>\r\n          <Switch>{itemRoutes}</Switch>\r\n        </Content>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n    Form,\r\n    Input\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback } from \"react\";\r\nimport { GlobalOutlined } from \"@ant-design/icons\";\r\nimport { GameState } from \"../../engine/types\";\r\nimport {\r\n    Controller,\r\n    ControllerFactory,\r\n    ControllerSelector,\r\n    InitPayload\r\n} from \"../types\";\r\n\r\nconst axiosOptions = {\r\n  headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n  timeout: 2000,\r\n};\r\n\r\nexport class RestController implements Controller {\r\n  private url: string;\r\n\r\n  constructor(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  init = async (payload: InitPayload) => {\r\n    const params = { playerNumber: payload.playerNumber };\r\n    const response = await axios.post(this.url + \"/init\", payload, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n    return response.data;\r\n  };\r\n\r\n  update = async (state: GameState, playerNumber?: number) => {\r\n    const params = { playerNumber };\r\n    const response = await axios.post(this.url + \"/update\", state, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n    return response.data;\r\n  };\r\n\r\n  end = async (state: GameState, playerNumber?: number) => {\r\n    const params = { playerNumber };\r\n    const response = await axios.post(this.url + \"/end\", state, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport const RestControllerSelector: ControllerSelector = ({ onChange }) => {\r\n  const onChangeCallback = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange(e.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n  return (\r\n    <Form.Item label=\"Address\">\r\n      <Input prefix={<GlobalOutlined />} onChange={onChangeCallback} />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport const RestControllerFactory: ControllerFactory = {\r\n  Selector: RestControllerSelector,\r\n  create: (value) => new RestController(value),\r\n  label: \"REST\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    GameState,\r\n    Move\r\n} from \"../engine/types\";\r\n\r\nexport type InitPayload = {\r\n  gameId: string;\r\n  gridSize: number;\r\n  playerCount: number;\r\n  playerNumber: number;\r\n};\r\n\r\nexport interface Controller {\r\n  init: (initPayload: InitPayload) => Promise<void>;\r\n  update: (state: GameState, playerNumber?: number) => Promise<Move>;\r\n  end: (gameState: GameState, playerNumber?: number) => Promise<void>;\r\n}\r\n\r\nexport type ControllerSelector =\r\n  React.FunctionComponent<ControllerSelectorProps>;\r\n\r\nexport interface ControllerFactory {\r\n  Selector: ControllerSelector;\r\n  create: (value: string) => Controller;\r\n  label: string;\r\n}\r\n\r\nexport type ControllerSelectorProps = {\r\n  onChange?: (value: string) => void;\r\n};\r\n\r\nexport const isController = (\r\n  controller: Controller | undefined\r\n): controller is Controller => {\r\n  return !!controller;\r\n};\r\n","import {\r\n    Button,\r\n    Divider,\r\n    Form,\r\n    Space,\r\n    Tooltip\r\n} from \"antd\";\r\nimport { uniqueId } from \"lodash\";\r\nimport React, {\r\n    useCallback,\r\n    useMemo,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    DeleteOutlined,\r\n    PlusOutlined\r\n} from \"@ant-design/icons\";\r\nimport { RestControllerFactory } from \"../../controller/adapters/rest\";\r\nimport {\r\n    Controller,\r\n    ControllerFactory,\r\n    isController\r\n} from \"../../controller/types\";\r\n\r\nexport type ControllerCreatorProps = {\r\n  onControllerChange: (controllers: Controller[]) => void;\r\n  onNext: () => void;\r\n};\r\n\r\nconst availableFactories: ControllerFactory[] = [RestControllerFactory];\r\n\r\nexport const ControllerCreator: React.FunctionComponent<ControllerCreatorProps> =\r\n  ({ onControllerChange, onNext }) => {\r\n    const [factoriesWithID, setFactoriesWithID] = useState<\r\n      Array<{ key: string; factory: ControllerFactory }>\r\n    >([]);\r\n    const controllers: Array<Controller | undefined> = useMemo(() => [], []);\r\n\r\n    const selectorChange = useCallback(\r\n      (pos) => (value: string) => {\r\n        controllers[pos] = factoriesWithID[pos].factory.create(value);\r\n        onControllerChange(controllers.filter(isController));\r\n      },\r\n      [onControllerChange, controllers, factoriesWithID]\r\n    );\r\n\r\n    const selectorFields = useMemo(\r\n      () =>\r\n        factoriesWithID.map(({ key, factory }, pos) => (\r\n          <Space style={{ display: \"flex\" }} align=\"baseline\" key={key}>\r\n            <factory.Selector onChange={selectorChange(pos)} />\r\n            <Button\r\n              type=\"text\"\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                setFactoriesWithID(\r\n                  factoriesWithID.filter(({ key: k }) => k !== key)\r\n                );\r\n                controllers[pos] = undefined;\r\n                onControllerChange(controllers.filter(isController));\r\n              }}\r\n            />\r\n          </Space>\r\n        )),\r\n      [\r\n        factoriesWithID,\r\n        setFactoriesWithID,\r\n        controllers,\r\n        selectorChange,\r\n        onControllerChange,\r\n      ]\r\n    );\r\n\r\n    const selectorCreateButtons = useMemo(() => {\r\n      return availableFactories.map((factory, pos) => {\r\n        return (\r\n          <Button\r\n            key={pos}\r\n            type=\"dashed\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => {\r\n              setFactoriesWithID([\r\n                ...factoriesWithID,\r\n                { key: uniqueId(factory.label), factory },\r\n              ]);\r\n            }}\r\n          >\r\n            Add {factory.label} controller\r\n          </Button>\r\n        );\r\n      });\r\n    }, [factoriesWithID, setFactoriesWithID]);\r\n\r\n    return (\r\n      <>\r\n        <Form>{selectorFields}</Form>\r\n        <Space>{selectorCreateButtons}</Space>\r\n        <Divider />\r\n        <Tooltip\r\n          title=\"You must specifiy at least 2 controllers\"\r\n          placement=\"right\"\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={onNext}\r\n            disabled={controllers.length < 2}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n","import {\r\n    Alert,\r\n    Button,\r\n    Progress,\r\n    ProgressProps,\r\n    Space,\r\n    Typography\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { Game } from \"../../engine/game\";\r\nimport {\r\n    GameHistory,\r\n    GameOptions\r\n} from \"../../engine/types\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport type RunProps = {\r\n  controllers?: Controller[];\r\n  onPrev: () => void;\r\n  onNext: () => void;\r\n  options?: GameOptions;\r\n  gameComplete: (history: GameHistory) => void;\r\n};\r\n\r\nexport enum RunStage {\r\n  UNSET,\r\n  CONTROLLER_INIT,\r\n  ERROR_STATE,\r\n  GAME_RUN,\r\n  GAME_OVER,\r\n}\r\n\r\nexport type RunState = {\r\n  errorTitle?: string;\r\n  errorDesc?: string;\r\n  game?: Game;\r\n  runStage: RunStage;\r\n  history?: GameHistory;\r\n  tickProgress: number;\r\n};\r\n\r\nexport class Run extends React.Component<RunProps, RunState> {\r\n  constructor(props: RunProps) {\r\n    super(props);\r\n    this.state = {\r\n      runStage: RunStage.UNSET,\r\n      tickProgress: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(_: RunProps, prevState: RunState) {\r\n    if (prevState.runStage !== this.state.runStage) {\r\n      this.stateUpdate();\r\n    }\r\n  }\r\n\r\n  onTickUpdate = (tick: number) => {\r\n    const { options } = this.props;\r\n    if (!options) {\r\n      return;\r\n    }\r\n    const tickProgress = Math.round((tick / options.maxTicks) * 100);\r\n    this.setState({ tickProgress });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { controllers, options } = this.props;\r\n\r\n    if (!controllers || !controllers.length || !options) {\r\n      this.setState({\r\n        runStage: RunStage.ERROR_STATE,\r\n        errorTitle: \"Missing controllers or options?\",\r\n        errorDesc:\r\n          JSON.stringify(controllers, null, 2) +\r\n          \"\\n\" +\r\n          JSON.stringify(options, null, 2),\r\n      });\r\n      return;\r\n    }\r\n\r\n    const game = new Game(controllers, options, this.onTickUpdate);\r\n    this.setState({ game, runStage: RunStage.CONTROLLER_INIT });\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.onPrev();\r\n  };\r\n\r\n  stateUpdate = (g?: Game) => {\r\n    const { runStage, game } = this.state;\r\n    if (!game) {\r\n      this.setState({\r\n        runStage: RunStage.ERROR_STATE,\r\n        errorTitle: \"No game object available\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    switch (runStage) {\r\n      case RunStage.CONTROLLER_INIT:\r\n        game\r\n          .initControllers()\r\n          .then(() => {\r\n            this.setState({ runStage: RunStage.GAME_RUN });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              runStage: RunStage.ERROR_STATE,\r\n              errorTitle: \"Error initialising controllers\",\r\n              errorDesc: err.message,\r\n            });\r\n          });\r\n        break;\r\n      case RunStage.GAME_RUN:\r\n        game\r\n          .run()\r\n          .then((history) => {\r\n            this.props.gameComplete(history);\r\n            this.setState({\r\n              runStage: RunStage.GAME_OVER,\r\n              history,\r\n            });\r\n            this.props.onNext();\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              runStage: RunStage.ERROR_STATE,\r\n              errorTitle: \"Error running game\",\r\n              errorDesc: err.message,\r\n            });\r\n          });\r\n        break;\r\n    }\r\n  };\r\n\r\n  statusMessage = () => {\r\n    const { runStage, errorDesc, errorTitle } = this.state;\r\n    switch (runStage) {\r\n      case RunStage.CONTROLLER_INIT:\r\n        return <Title level={3}>Initialising controllers...</Title>;\r\n      case RunStage.ERROR_STATE:\r\n        return (\r\n          <Alert\r\n            message={errorTitle}\r\n            description={<pre>{errorDesc}</pre>}\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        );\r\n      case RunStage.GAME_RUN:\r\n        return <Title level={3}>Running...</Title>;\r\n      case RunStage.GAME_OVER:\r\n        return <Title level={3}>Game complete!</Title>;\r\n      default:\r\n        return (\r\n          <Alert message=\"Game unset!? Contact dev\" type=\"warning\" showIcon />\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const body = this.statusMessage();\r\n\r\n    const { tickProgress, runStage } = this.state;\r\n    let progressStatus: ProgressProps[\"status\"] = \"normal\";\r\n    if (runStage === RunStage.GAME_RUN) {\r\n      progressStatus = \"active\";\r\n    } else if (runStage === RunStage.GAME_OVER) {\r\n      progressStatus = \"success\";\r\n    } else if (runStage === RunStage.ERROR_STATE) {\r\n      progressStatus = \"exception\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Space\r\n          direction=\"vertical\"\r\n          style={{\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {body}\r\n          <Progress\r\n            type=\"circle\"\r\n            percent={tickProgress}\r\n            status={progressStatus}\r\n          />\r\n          <br />\r\n          <Button size=\"large\" onClick={this.onCancel} danger>\r\n            Cancel\r\n          </Button>\r\n        </Space>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import {\r\n    flatten,\r\n    isEqual\r\n} from \"lodash\";\r\nimport {\r\n    GameState,\r\n    isPos,\r\n    Pos\r\n} from \"./types\";\r\n\r\nexport class PositionPool {\r\n  private gameState: GameState;\r\n  private pool: Pos[];\r\n\r\n  constructor(gameState: GameState) {\r\n    this.gameState = gameState;\r\n    this.pool = this.generatePool();\r\n  }\r\n\r\n  private generatePool = () => {\r\n    const { positions, meta, foodPositions } = this.gameState;\r\n    const width = meta.gridSize;\r\n    const taken = flatten(positions).concat(foodPositions);\r\n    return new Array(width * width)\r\n      .fill(0)\r\n      .map((_, i) => [i % width, Math.floor(i / width)])\r\n      .filter((p) => !taken.some((t) => isEqual(t, p)))\r\n      .filter(isPos);\r\n  };\r\n\r\n  public next = () => {\r\n    const i = Math.floor(Math.random() * this.pool.length);\r\n    return this.pool.splice(i, 1)[0];\r\n  };\r\n\r\n  public empty = () => this.pool.length === 0;\r\n}\r\n","import { omit } from \"lodash\";\r\nimport {\r\n    GameHistory,\r\n    GameResult,\r\n    GameState,\r\n    Move,\r\n    Pos\r\n} from \"./types\";\r\n\r\nexport const randomPos = (bounds: number): Pos => {\r\n  return [\r\n    Math.floor(Math.random() * bounds),\r\n    Math.floor(Math.random() * bounds),\r\n  ];\r\n};\r\n\r\nexport const moveToVector2d = (move: Move): [number, number] => {\r\n  const vecs: { [key: string]: [number, number] } = {\r\n    [Move.NORTH]: [0, -1],\r\n    [Move.SOUTH]: [0, 1],\r\n    [Move.EAST]: [1, 0],\r\n    [Move.WEST]: [-1, 0],\r\n  };\r\n  return vecs[move];\r\n};\r\n\r\nexport const withinBounds = (pos: Pos, bounds: number): boolean => {\r\n  return pos.every((p) => p >= 0 && p < bounds);\r\n};\r\n\r\nexport const gameHistorySummarise = (history: GameState[]): GameHistory => {\r\n  const lastFrame = history[history.length - 1];\r\n  const meta = lastFrame.meta;\r\n  const winnerCount = lastFrame.playersAlive.filter((p) => p).length;\r\n  const result =\r\n    winnerCount > 1\r\n      ? GameResult.TIMEOUT\r\n      : winnerCount === 1\r\n      ? GameResult.WINNER\r\n      : GameResult.DRAW;\r\n\r\n  let winner = null;\r\n  if (result === GameResult.WINNER) {\r\n    winner = lastFrame.playersAlive.findIndex((p) => p);\r\n  }\r\n  const ticks = history.map((h) => omit(h, [\"meta\"]));\r\n  const timeStamp = new Date().toISOString();\r\n  return {\r\n    ...meta,\r\n    tickCount: ticks.length,\r\n    ticks,\r\n    winner,\r\n    timeStamp,\r\n    result,\r\n  };\r\n};\r\n","import { notification } from \"antd\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Controller } from \"../controller/types\";\r\nimport { PositionPool } from \"./PositionPool\";\r\nimport {\r\n    GameOptions,\r\n    GameState,\r\n    isPos,\r\n    Move,\r\n    Pos\r\n} from \"./types\";\r\nimport {\r\n    gameHistorySummarise,\r\n    moveToVector2d,\r\n    withinBounds\r\n} from \"./utils\";\r\n\r\nconst defaultOptions: GameOptions = {\r\n  gridSize: 50,\r\n  maxTicks: 1000,\r\n};\r\n\r\nexport class Game {\r\n  controllers: Controller[];\r\n  options: GameOptions;\r\n  gameState: GameState;\r\n  controllersReady: boolean[];\r\n  onGameTick: (tick: number) => void;\r\n\r\n  constructor(\r\n    controllers: Controller[],\r\n    options?: GameOptions,\r\n    onGameTick?: (tick: number) => void\r\n  ) {\r\n    this.controllers = controllers;\r\n    this.options = { ...defaultOptions, ...options };\r\n    this.gameState = this.initState(controllers, this.options);\r\n    this.controllersReady = new Array(controllers.length).fill(false);\r\n    this.onGameTick = onGameTick ?? (() => {});\r\n  }\r\n\r\n  public async initControllers() {\r\n    await Promise.all(\r\n      this.controllers.map(async (c, i) => {\r\n        await c.init({\r\n          playerNumber: i,\r\n          gameId: this.gameState.meta.gameId,\r\n          gridSize: this.gameState.meta.gridSize,\r\n          playerCount: this.gameState.meta.playerCount,\r\n        });\r\n        this.controllersReady[i] = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public async run() {\r\n    if (!this.controllersReady.every((r) => r)) {\r\n      throw new Error(\r\n        \"Controllers are not ready. \" + JSON.stringify(this.controllersReady)\r\n      );\r\n    }\r\n\r\n    const allStates: GameState[] = [];\r\n    while (\r\n      this.gameState.playersAlive.filter((p) => p).length > 1 &&\r\n      this.gameState.tick < this.options.maxTicks\r\n    ) {\r\n      const copy = cloneDeep(this.gameState);\r\n      allStates.push(copy);\r\n      await this.update();\r\n      this.onGameTick(this.gameState.tick);\r\n    }\r\n    const copy = cloneDeep(this.gameState);\r\n    allStates.push(copy);\r\n    this.onGameTick(this.gameState.tick);\r\n\r\n    await Promise.all(\r\n      this.controllers.map(async (c, i) => await c.end(this.gameState, i))\r\n    ).catch(() => {});\r\n\r\n    return gameHistorySummarise(allStates);\r\n  }\r\n\r\n  private initState(\r\n    controllers: Controller[],\r\n    options: GameOptions\r\n  ): GameState {\r\n    const playerCount = controllers.length;\r\n    const newState: GameState = {\r\n      tick: 0,\r\n      positions: [],\r\n      lastMoves: [],\r\n      foodPositions: [],\r\n      playersAlive: new Array(playerCount).fill(true),\r\n      meta: {\r\n        playerCount,\r\n        gameId: uuidv4(),\r\n        gridSize: options.gridSize,\r\n      },\r\n    };\r\n\r\n    const posPool = new PositionPool(newState);\r\n\r\n    newState.positions = new Array(playerCount)\r\n      .fill(null)\r\n      .map(() => [posPool.next()]);\r\n    newState.foodPositions = new Array(playerCount)\r\n      .fill(null)\r\n      .map(() => posPool.next());\r\n    return newState;\r\n  }\r\n\r\n  public async update() {\r\n    const controllerMoves = await Promise.all(\r\n      this.controllers.map(async (c, i) => {\r\n        if (this.gameState.playersAlive[i]) {\r\n          return await c.update(this.gameState, i).catch(() => null);\r\n        } else {\r\n          return Move.NOP;\r\n        }\r\n      })\r\n    );\r\n\r\n    const newState = this.apply(this.gameState, controllerMoves);\r\n    this.gameState = newState;\r\n    return this.gameState;\r\n  }\r\n\r\n  private apply(\r\n    oldState: GameState,\r\n    controllerMoves: (Move | null)[]\r\n  ): GameState {\r\n    const newState = { ...oldState };\r\n\r\n    newState.tick = oldState.tick + 1;\r\n\r\n    const newHeads = controllerMoves.map((move, player) => {\r\n      if (move === Move.NOP) {\r\n        newState.playersAlive[player] = false;\r\n        return null;\r\n      }\r\n\r\n      if (move === null) {\r\n        notification.error({\r\n          message: `Player ${player} disqualified`,\r\n          description: `Player ${player} has been disqualified. Either the controller has crashed or it returned an invalid move.`,\r\n          duration: 0,\r\n        });\r\n        newState.playersAlive[player] = false;\r\n        return null;\r\n      }\r\n\r\n      if (!oldState.playersAlive[player]) {\r\n        return null;\r\n      }\r\n\r\n      newState.lastMoves[player] = move;\r\n      const currentHead = oldState.positions[player][0];\r\n      const moveVec = moveToVector2d(move);\r\n      return [currentHead[0] + moveVec[0], currentHead[1] + moveVec[1]] as Pos;\r\n    });\r\n\r\n    // Check out of bounds\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      if (!withinBounds(head, newState.meta.gridSize)) {\r\n        newState.playersAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Check head collisions\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = newHeads\r\n        .filter((p) => p !== null && p[0] === head[0] && p[1] === head[1])\r\n        .filter(isPos).length;\r\n\r\n      // Collides with more than self\r\n      if (collides > 1) {\r\n        newState.playersAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Eat or shrink\r\n    const eatenFoodIndex: Set<number> = new Set();\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = newState.foodPositions.findIndex(\r\n        (p) => p !== null && p[0] === head[0] && p[1] === head[1]\r\n      );\r\n\r\n      if (collides !== -1) {\r\n        // Eats food\r\n        eatenFoodIndex.add(collides);\r\n      } else {\r\n        // Shrinks\r\n        newState.positions[player].pop();\r\n      }\r\n    });\r\n\r\n    // Detect head vs body collisions\r\n    const allBodies = newState.positions.flat();\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = allBodies.findIndex(\r\n        (p) => p !== null && p[0] === head[0] && p[1] === head[1]\r\n      );\r\n      if (collides !== -1) {\r\n        newState.playersAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Commit to new heads\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      newState.positions[player].unshift(head);\r\n    });\r\n\r\n    // Replace eaten food\r\n    const positionPool = new PositionPool(newState);\r\n    newState.foodPositions = newState.foodPositions\r\n      .map((p, i) => {\r\n        if (eatenFoodIndex.has(i)) {\r\n          if (positionPool.empty()) {\r\n            return undefined;\r\n          }\r\n          return positionPool.next();\r\n        }\r\n        return p;\r\n      })\r\n      .filter(isPos);\r\n    return newState;\r\n  }\r\n}\r\n","import {\r\n    Steps,\r\n    Typography\r\n} from \"antd\";\r\nimport React, {\r\n    useCallback,\r\n    useState\r\n} from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport {\r\n    GameHistory,\r\n    GameOptions\r\n} from \"../../engine/types\";\r\nimport { ControllerCreator } from \"./ControllerCreator\";\r\nimport { Run } from \"./Run\";\r\nimport { GameSetup } from \"./Setup\";\r\nimport { Summary } from \"./Summary\";\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nexport type GamePageProps = {};\r\n\r\nenum SetupStage {\r\n  CONTROLLER_CREATOR,\r\n  GAME_SETUP,\r\n  PLAYING,\r\n  SUMMARY,\r\n}\r\n\r\nexport const GameRunner: React.FunctionComponent<GamePageProps> = () => {\r\n  const [currentStage, setCurrentStage] = useState(\r\n    SetupStage.CONTROLLER_CREATOR\r\n  );\r\n\r\n  const [controllers, setControllers] = useState<Controller[]>([]);\r\n  const [options, setOptions] = useState<GameOptions | undefined>();\r\n  const [gameHistory, setGameHistory] = useState<GameHistory | undefined>();\r\n\r\n  const creatorCallback = useCallback(\r\n    (controllers) => {\r\n      setControllers(controllers);\r\n    },\r\n    [setControllers]\r\n  );\r\n\r\n  const onConfigChange = useCallback(\r\n    (options) => {\r\n      setOptions(options);\r\n    },\r\n    [setOptions]\r\n  );\r\n\r\n  const completeCallback = useCallback(\r\n    (history) => {\r\n      setGameHistory(history);\r\n    },\r\n    [setGameHistory]\r\n  );\r\n\r\n  const nextCallback = useCallback(() => {\r\n    setCurrentStage((currentStage + 1) % (SetupStage.SUMMARY + 1));\r\n  }, [currentStage, setCurrentStage]);\r\n  const prevCallback = useCallback(() => {\r\n    setCurrentStage((currentStage - 1) % (SetupStage.SUMMARY + 1));\r\n  }, [currentStage, setCurrentStage]);\r\n\r\n  return (\r\n    <>\r\n      <Title>Play a Game</Title>\r\n      <Steps current={currentStage}>\r\n        <Step title=\"Controller Creator\" />\r\n        <Step title=\"Game Setup\" />\r\n        <Step title=\"Running\" />\r\n        <Step title=\"Summary\" />\r\n      </Steps>\r\n\r\n      <br />\r\n      {currentStage === SetupStage.CONTROLLER_CREATOR && (\r\n        <ControllerCreator\r\n          onControllerChange={creatorCallback}\r\n          onNext={nextCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.GAME_SETUP && (\r\n        <GameSetup\r\n          onConfigChange={onConfigChange}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.PLAYING && (\r\n        <Run\r\n          controllers={controllers}\r\n          options={options}\r\n          onPrev={prevCallback}\r\n          onNext={nextCallback}\r\n          gameComplete={completeCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.SUMMARY && (\r\n        <Summary\r\n          gameHistory={gameHistory}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n    Button,\r\n    Form,\r\n    InputNumber,\r\n    Space\r\n} from \"antd\";\r\nimport React, {\r\n    useCallback,\r\n    useEffect\r\n} from \"react\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nexport type GameSetupProps = {\r\n  onConfigChange: (options: GameOptions) => void;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const GameSetup: React.FunctionComponent<GameSetupProps> = ({\r\n  onConfigChange,\r\n  onNext,\r\n  onPrev,\r\n}) => {\r\n  const [gridSize, setGridSize] = React.useState(50);\r\n  const [maxTicks, setMaxTicks] = React.useState(1000);\r\n\r\n  const changeCallback = useCallback(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  const onMaxTicksChange = useCallback(\r\n    (value: number) => {\r\n      setMaxTicks(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setMaxTicks]\r\n  );\r\n\r\n  const onGridSizeChange = useCallback(\r\n    (value: number) => {\r\n      setGridSize(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setGridSize]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Item label=\"Max ticks\">\r\n          <InputNumber\r\n            min={1}\r\n            max={10000}\r\n            defaultValue={1000}\r\n            value={maxTicks}\r\n            onChange={onMaxTicksChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Grid size\">\r\n          <InputNumber\r\n            min={10}\r\n            max={1000}\r\n            defaultValue={50}\r\n            value={gridSize}\r\n            onChange={onGridSizeChange}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Space>\r\n        <Button onClick={onPrev}>Previous</Button>\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Start\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n","import { GameHistory } from \"../engine/types\";\r\n\r\nexport const createDownloadHref = (gameHistory: GameHistory) => {\r\n  const jsonBlob = new Blob([JSON.stringify(gameHistory, null, 2)], {\r\n    type: \"text/json\",\r\n  });\r\n  const href = URL.createObjectURL(jsonBlob);\r\n  const download = `${gameHistory.timeStamp}.json`;\r\n\r\n  return {\r\n    href,\r\n    download,\r\n  };\r\n};\r\n","import localforage from \"localforage\";\r\nimport { GameHistory } from \"../engine/types\";\r\n\r\nconst historyStore = localforage.createInstance({\r\n  name: \"history\",\r\n});\r\n\r\nexport const addHistory = async (history: GameHistory): Promise<void> => {\r\n  await historyStore.setItem(history.gameId, history);\r\n};\r\n\r\nexport const getHistories = async (): Promise<GameHistory[]> => {\r\n  const keys = await historyStore.keys();\r\n  const histories = await Promise.all(\r\n    keys.map(async (key) => {\r\n      const history = await historyStore.getItem(key);\r\n      return history as GameHistory;\r\n    })\r\n  );\r\n  return histories;\r\n};\r\n\r\nexport const deleteHistory = async (gameId: string): Promise<void> => {\r\n  await historyStore.removeItem(gameId);\r\n};\r\n\r\nexport const deleteAllHistories = async (): Promise<void> => {\r\n  await historyStore.clear();\r\n};\r\n","import {\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    notification,\r\n    Result,\r\n    Space,\r\n    Typography\r\n} from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    DownloadOutlined,\r\n    EyeOutlined,\r\n    HourglassOutlined,\r\n    MehOutlined,\r\n    TrophyOutlined\r\n} from \"@ant-design/icons\";\r\nimport {\r\n    GameHistory,\r\n    GameResult\r\n} from \"../../engine/types\";\r\nimport { createDownloadHref } from \"../../store/download\";\r\nimport { addHistory } from \"../../store/history\";\r\n\r\nconst { Panel } = Collapse;\r\nconst { Paragraph } = Typography;\r\n\r\nexport type SummaryProps = {\r\n  gameHistory?: GameHistory;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const Summary: React.FunctionComponent<SummaryProps> = (props) => {\r\n  const { gameHistory, onNext, onPrev } = props;\r\n  useEffect(() => {\r\n    if (gameHistory) {\r\n      addHistory(gameHistory).catch((e) => {\r\n        notification.error({\r\n          message: \"Could not save history\",\r\n          description: e.message,\r\n        });\r\n      });\r\n    }\r\n  }, [gameHistory]);\r\n\r\n  if (!gameHistory) {\r\n    return <div>Error: No game history specified</div>;\r\n  }\r\n\r\n  const downloadProps = createDownloadHref(gameHistory);\r\n\r\n  let result = (\r\n    <Result\r\n      icon={<TrophyOutlined />}\r\n      status=\"success\"\r\n      title={\"Player \" + gameHistory.winner + \" wins!\"}\r\n    />\r\n  );\r\n\r\n  if (gameHistory.result === GameResult.DRAW) {\r\n    result = <Result icon={<MehOutlined />} status=\"warning\" title={\"Draw!\"} />;\r\n  } else if (gameHistory.result === GameResult.TIMEOUT) {\r\n    result = (\r\n      <Result icon={<HourglassOutlined />} status=\"warning\" title={\"Timeout\"} />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {result}\r\n      <Space>\r\n        <Button onClick={onPrev} type=\"primary\">\r\n          Play again\r\n        </Button>\r\n        <Button onClick={onNext}>New game</Button>\r\n        <Link to={`/viewer?gameId=${gameHistory?.gameId}`}>\r\n          <Button icon={<EyeOutlined />}>Show in viewer</Button>\r\n        </Link>\r\n        <Button icon={<DownloadOutlined />} {...downloadProps}>\r\n          Download replay\r\n        </Button>\r\n      </Space>\r\n\r\n      <Divider />\r\n\r\n      <Collapse>\r\n        <Panel header=\"Full Game History\" key=\"1\">\r\n          <Paragraph>\r\n            <pre>{JSON.stringify(gameHistory, null, 2)}</pre>\r\n          </Paragraph>\r\n        </Panel>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type HomePageProps = {};\r\n\r\nexport const HomePage: React.FunctionComponent<HomePageProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Title>Snake Tron - Code Fights!</Title>\r\n\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport type ContentPartProps = {};\r\n\r\nexport const ContentPart: React.FunctionComponent<ContentPartProps> = (\r\n  props\r\n) => {\r\n  return <Content className=\"content\">{props.children}</Content>;\r\n};\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const FooterPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Footer className=\"footer\">\r\n      Created by <a href=\"http://samuel-lewis.com/\">Samuel Lewis</a>\r\n    </Footer>\r\n  );\r\n};\r\n","import {\r\n    Layout,\r\n    Menu\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\"></div>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"game\">\r\n          <Link to=\"/game\">Game</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"viewer\">\r\n          <Link to=\"/viewer\">Viewer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"tester\">\r\n          <Link to=\"/tester\">Controller Tester</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"docs\">\r\n          <Link to=\"/docs\">Docs</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import {\r\n    Button,\r\n    Col,\r\n    Divider,\r\n    Row,\r\n    Space,\r\n    Tabs,\r\n    Typography\r\n} from \"antd\";\r\nimport React, {\r\n    useCallback,\r\n    useState\r\n} from \"react\";\r\nimport { RestControllerFactory } from \"../controller/adapters/rest\";\r\nimport {\r\n    Controller,\r\n    InitPayload\r\n} from \"../controller/types\";\r\nimport {\r\n    GameState,\r\n    Move\r\n} from \"../engine/types\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst dummyId = \"48e2ee9e-171e-45bd-8904-a762d8e2b782\";\r\n\r\nconst sampleIniData: InitPayload = {\r\n  playerNumber: 1,\r\n  playerCount: 2,\r\n  gameId: dummyId,\r\n  gridSize: 50,\r\n};\r\n\r\nconst sampleStateData: GameState = {\r\n  tick: 2,\r\n  positions: [\r\n    [\r\n      [42, 31],\r\n      [41, 31],\r\n      [40, 31],\r\n    ],\r\n    [\r\n      [47, 27],\r\n      [47, 28],\r\n    ],\r\n  ],\r\n  lastMoves: [Move.NORTH, Move.SOUTH],\r\n  foodPositions: [\r\n    [35, 16],\r\n    [17, 6],\r\n  ],\r\n  playersAlive: [true, true],\r\n  meta: {\r\n    playerCount: 2,\r\n    gameId: dummyId,\r\n    gridSize: 50,\r\n  },\r\n};\r\n\r\nexport type ControllerTesterPageProps = {};\r\n\r\nexport const ControllerTesterPage: React.FunctionComponent<ControllerTesterPageProps> =\r\n  () => {\r\n    const [controller, setController] = useState<Controller | null>(null);\r\n    const [response, setResponse] = useState<string>(\"\");\r\n    const [sendData, setSendData] = useState<string>(\"\");\r\n\r\n    const loaderCallback = useCallback(\r\n      (value) => {\r\n        setController(RestControllerFactory.create(value));\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    const iniTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleIniData, null, 2));\r\n      controller\r\n        ?.init(sampleIniData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const stateTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.update(sampleStateData, 1)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const endTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.end(sampleStateData, 1)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    return (\r\n      <>\r\n        <Title>Controller Tester</Title>\r\n\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab={RestControllerFactory.label} key=\"1\">\r\n            <RestControllerFactory.Selector onChange={loaderCallback} />\r\n          </TabPane>\r\n        </Tabs>\r\n        <Space>\r\n          <Button onClick={iniTestCallback}>Test game initialise</Button>\r\n          <Button onClick={stateTestCallback}>Test game update</Button>\r\n          <Button onClick={endTestCallback}>Test game end</Button>\r\n        </Space>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Divider>Sent</Divider>\r\n            <Paragraph>{sendData && <pre>{sendData}</pre>}</Paragraph>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Divider>Response</Divider>\r\n            <Paragraph>{response && <pre>{response}</pre>}</Paragraph>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n","export const contrastColours = [\r\n  \"#e6194B\",\r\n  \"#3cb44b\",\r\n  \"#ffe119\",\r\n  \"#4363d8\",\r\n  \"#f58231\",\r\n  \"#911eb4\",\r\n  \"#42d4f4\",\r\n  \"#f032e6\",\r\n  \"#bfef45\",\r\n  \"#fabed4\",\r\n  \"#469990\",\r\n  \"#dcbeff\",\r\n  \"#9A6324\",\r\n  \"#fffac8\",\r\n  \"#800000\",\r\n  \"#aaffc3\",\r\n  \"#808000\",\r\n  \"#ffd8b1\",\r\n  \"#000075\",\r\n];\r\n\r\nexport const getColour = (number: number) => {\r\n  return contrastColours[number % contrastColours.length];\r\n};\r\n","import React, {\r\n    useLayoutEffect,\r\n    useRef\r\n} from \"react\";\r\nimport {\r\n    MetalessGameState,\r\n    Pos\r\n} from \"../engine/types\";\r\nimport { getColour } from \"../theme\";\r\n\r\nconst CANVAS_SIZE = 400;\r\n\r\nconst posToCanvas = ([x, y]: Pos, partSize: number) => {\r\n  return [x * partSize + partSize / 2, y * partSize + partSize / 2];\r\n};\r\n\r\nexport type CanvasProps = {\r\n  state: MetalessGameState;\r\n  gridSize: number;\r\n};\r\n\r\nconst clearCanvas = (ctx: CanvasRenderingContext2D) => {\r\n  ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = \"white\";\r\n  ctx.strokeRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n};\r\n\r\nfunction drawSnake(\r\n  ctx: CanvasRenderingContext2D,\r\n  partSize: number,\r\n  snake: Pos[],\r\n  player: number\r\n) {\r\n  const colour = getColour(player);\r\n  const [headX, headY] = posToCanvas(snake[0], partSize);\r\n\r\n  ctx.lineWidth = partSize - 2;\r\n  ctx.strokeStyle = colour;\r\n  ctx.lineCap = \"square\";\r\n  ctx.beginPath();\r\n  ctx.moveTo(headX, headY);\r\n\r\n  snake.forEach((pos) => {\r\n    const [x, y] = posToCanvas(pos, partSize);\r\n    ctx.lineTo(x, y);\r\n  });\r\n\r\n  ctx.stroke();\r\n}\r\n\r\nconst drawFood = (\r\n  ctx: CanvasRenderingContext2D,\r\n  partSize: number,\r\n  pos: Pos\r\n) => {\r\n  const [x, y] = posToCanvas(pos, partSize);\r\n  ctx.fillStyle = \"green\";\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, partSize / 2, 0, 2 * Math.PI);\r\n  ctx.fill();\r\n};\r\n\r\nexport const Canvas: React.FunctionComponent<CanvasProps> = (props) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const { state, gridSize } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n\r\n    const partSize = CANVAS_SIZE / gridSize;\r\n\r\n    clearCanvas(ctx);\r\n\r\n    state.positions.forEach((player, i) => {\r\n      drawSnake(ctx, partSize, player, i);\r\n    });\r\n    state.foodPositions.forEach((pos) => drawFood(ctx, partSize, pos));\r\n  }, [canvasRef, state, gridSize]);\r\n\r\n  return <canvas width={CANVAS_SIZE} height={CANVAS_SIZE} ref={canvasRef} />;\r\n};\r\n","import {\r\n    Table,\r\n    Typography\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport {\r\n    CheckCircleOutlined,\r\n    CloseCircleOutlined\r\n} from \"@ant-design/icons\";\r\nimport { MetalessGameState } from \"../engine/types\";\r\nimport { getColour } from \"../theme\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport type StateSnapshotProps = {\r\n  frame: MetalessGameState;\r\n  viewedPlayer?: (player: number) => void;\r\n};\r\n\r\nexport const StateSnapshot: React.FunctionComponent<StateSnapshotProps> = ({\r\n  frame,\r\n}) => {\r\n  if (!frame) {\r\n    return null;\r\n  }\r\n  const playerData = new Array(frame.playersAlive.length)\r\n    .fill(null)\r\n    .map((_, i) => {\r\n      return {\r\n        key: `Player ${i}`,\r\n        alive: frame.playersAlive[i],\r\n        lastMove: frame.lastMoves[i],\r\n        position: frame.positions[i],\r\n        playerNumber: i,\r\n        length: frame.positions[i].length,\r\n      };\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Paragraph>Tick: {frame.tick}</Paragraph>\r\n      <Paragraph>Food: {JSON.stringify(frame.foodPositions)}</Paragraph>\r\n\r\n      <Table size=\"small\" dataSource={playerData} pagination={false}>\r\n        <Table.Column\r\n          title=\"Player\"\r\n          dataIndex=\"playerNumber\"\r\n          key=\"playerNumber\"\r\n          render={(number: number) => (\r\n            <>\r\n              <span\r\n                className=\"dot\"\r\n                style={{ backgroundColor: getColour(number) }}\r\n              ></span>\r\n              Player {number}\r\n            </>\r\n          )}\r\n        />\r\n        <Table.Column\r\n          title=\"Alive\"\r\n          dataIndex=\"alive\"\r\n          key=\"alive\"\r\n          render={(alive: boolean) =>\r\n            alive ? <CheckCircleOutlined /> : <CloseCircleOutlined />\r\n          }\r\n        />\r\n        <Table.Column title=\"Last Move\" dataIndex=\"lastMove\" key=\"lastMove\" />\r\n        <Table.Column title=\"Length\" dataIndex=\"length\" key=\"length\" />\r\n        <Table.Column\r\n          title=\"Positions\"\r\n          dataIndex=\"position\"\r\n          key=\"position\"\r\n          ellipsis\r\n          render={(position: number) => JSON.stringify(position)}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n    Col,\r\n    Row,\r\n    Slider\r\n} from \"antd\";\r\nimport React, {\r\n    useCallback,\r\n    useState\r\n} from \"react\";\r\nimport { GameHistory } from \"../engine/types\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport { StateSnapshot } from \"./Snapshot\";\r\n\r\nexport type ViewerProps = {\r\n  history?: GameHistory;\r\n};\r\n\r\nexport const Viewer: React.FunctionComponent<ViewerProps> = (props) => {\r\n  const { history } = props;\r\n  const [tick, setTick] = useState(0);\r\n  const sliderChange = useCallback((value) => setTick(value), [setTick]);\r\n\r\n  if (!history) {\r\n    return <div>Error: No history loaded?!</div>;\r\n  }\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={12}>\r\n        <Canvas state={history.ticks[tick]} gridSize={history.gridSize} />\r\n        <Slider\r\n          style={{ width: \"400px\", marginLeft: 0, marginRight: 0 }}\r\n          value={tick}\r\n          min={0}\r\n          max={history.tickCount - 1}\r\n          onChange={sliderChange}\r\n        />\r\n      </Col>\r\n      <Col span={12}>\r\n        <StateSnapshot frame={history.ticks[tick]} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import {\r\n    Button,\r\n    Divider,\r\n    message,\r\n    Modal,\r\n    notification,\r\n    Table,\r\n    TableProps,\r\n    Tag,\r\n    Tooltip,\r\n    Typography\r\n} from \"antd\";\r\nimport React, {\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    Link,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport {\r\n    DeleteOutlined,\r\n    DownloadOutlined,\r\n    EyeOutlined\r\n} from \"@ant-design/icons\";\r\nimport {\r\n    GameHistory,\r\n    GameResult\r\n} from \"../engine/types\";\r\nimport { createDownloadHref } from \"../store/download\";\r\nimport {\r\n    deleteAllHistories,\r\n    deleteHistory,\r\n    getHistories\r\n} from \"../store/history\";\r\nimport { Viewer } from \"../viewer/Viewer\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\ntype DeleteAllModalProps = {\r\n  onDelete: () => void;\r\n};\r\nconst DeleteAllModal: React.FunctionComponent<DeleteAllModalProps> = ({\r\n  onDelete,\r\n}) => {\r\n  const openModal = useCallback(() => {\r\n    Modal.warning({\r\n      title: \"Are you sure you want to delete all game replays?\",\r\n      closable: true,\r\n      okText: \"Delete all\",\r\n      okCancel: true,\r\n      okButtonProps: {\r\n        danger: true,\r\n        type: \"primary\",\r\n      },\r\n      content: (\r\n        <Paragraph>\r\n          Are you sure you want to delete all game replays? This can not be\r\n          undone.\r\n        </Paragraph>\r\n      ),\r\n      onOk: onDelete,\r\n    });\r\n  }, [onDelete]);\r\n\r\n  return (\r\n    <Button icon={<DeleteOutlined />} onClick={openModal} danger type=\"text\">\r\n      Delete all histories\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nexport type ViewerPageProps = {};\r\n\r\nexport const ViewerPage: React.FunctionComponent<ViewerPageProps> = () => {\r\n  const routerHistory = useHistory();\r\n  const [loadedHistories, setLoadedHistories] = useState<GameHistory[]>([]);\r\n  const [loadedHistory, setLoadedHistory] = useState<GameHistory | undefined>();\r\n  const query = useQuery();\r\n\r\n  const loadHistories = useCallback(async () => {\r\n    getHistories()\r\n      .then((histories) => {\r\n        if (histories.length !== loadedHistories.length) {\r\n          setLoadedHistories(histories);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        notification.error({\r\n          message: \"Failed to load all histories\",\r\n          description: e.message,\r\n        });\r\n      });\r\n  }, [loadedHistories]);\r\n\r\n  useEffect(() => {\r\n    loadHistories();\r\n    const id = query.get(\"gameId\");\r\n    if (!id || loadedHistories.length === 0) {\r\n      setLoadedHistory(undefined);\r\n      return;\r\n    }\r\n\r\n    const selected = loadedHistories.find((h) => h.gameId === id);\r\n    if (selected) {\r\n      if (selected.gameId !== loadedHistory?.gameId) {\r\n        setLoadedHistory(selected);\r\n      }\r\n      return;\r\n    } else {\r\n      message.error(`Could not find game ${id}`);\r\n    }\r\n  }, [loadedHistories, loadedHistory, setLoadedHistory, loadHistories, query]);\r\n\r\n  const deleteAll = useCallback(async () => {\r\n    deleteAllHistories()\r\n      .then(() => {\r\n        setLoadedHistory(undefined);\r\n        setLoadedHistories([]);\r\n        routerHistory.push(\"/viewer\");\r\n      })\r\n      .catch((e) => {\r\n        notification.error({\r\n          message: \"Failed to delete all histories\",\r\n          description: e.message,\r\n        });\r\n      });\r\n  }, [setLoadedHistory, setLoadedHistories, routerHistory]);\r\n\r\n  const deleteSingleHistory = useCallback(\r\n    async (gameId: string) => {\r\n      deleteHistory(gameId)\r\n        .then(() => {\r\n          if (loadedHistory?.gameId === gameId) {\r\n            setLoadedHistory(undefined);\r\n            loadHistories();\r\n            routerHistory.push(\"/viewer\");\r\n            return;\r\n          }\r\n          loadHistories();\r\n        })\r\n        .catch((e) => {\r\n          notification.error({\r\n            message: \"Failed to delete history\",\r\n            description: e.message,\r\n          });\r\n        });\r\n    },\r\n    [loadedHistory, setLoadedHistory, routerHistory, loadHistories]\r\n  );\r\n\r\n  const dataSource = useMemo(() => {\r\n    return loadedHistories.map((game) => {\r\n      return {\r\n        ...game,\r\n        key: game.gameId,\r\n      };\r\n    });\r\n  }, [loadedHistories]);\r\n\r\n  const columns: TableProps<GameHistory>[\"columns\"] = [\r\n    {\r\n      title: \"Timestamp\",\r\n      dataIndex: \"timeStamp\",\r\n      key: \"timeStamp\",\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a, b: GameHistory) =>\r\n          new Date(a.timeStamp).valueOf() - new Date(b.timeStamp).valueOf(),\r\n        multiple: 1,\r\n      },\r\n      render: (timeStamp: string) => {\r\n        return <span>{new Date(timeStamp).toString()}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Result\",\r\n      dataIndex: \"result\",\r\n      key: \"result\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.result.localeCompare(b.result),\r\n        multiple: 2,\r\n      },\r\n      render(value: GameResult, record) {\r\n        const player = record.winner;\r\n        const colour =\r\n          value === GameResult.WINNER\r\n            ? \"green\"\r\n            : value === GameResult.DRAW\r\n            ? \"blue\"\r\n            : \"red\";\r\n        return (\r\n          <>\r\n            <Tag color={colour}>{value}</Tag>\r\n            {player !== -1 && <span>Player {player}</span>}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Player count\",\r\n      dataIndex: \"playerCount\",\r\n      key: \"playerCount\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.playerCount - b.playerCount,\r\n        multiple: 4,\r\n      },\r\n    },\r\n    {\r\n      title: \"Tick count\",\r\n      dataIndex: \"tickCount\",\r\n      key: \"tickCount\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) => a.tickCount - b.tickCount,\r\n        multiple: 5,\r\n      },\r\n    },\r\n    {\r\n      title: \"Grid size\",\r\n      dataIndex: \"gridSize\",\r\n      key: \"gridSize\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) => a.gridSize - b.gridSize,\r\n        multiple: 6,\r\n      },\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"gameId\",\r\n      key: \"gameId\",\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.gameId.localeCompare(b.gameId),\r\n        multiple: 7,\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (_, record: any) => {\r\n        const { key, humanDate, ...rest } = record;\r\n        const downloadProps = createDownloadHref(rest);\r\n        return (\r\n          <>\r\n            <Tooltip title=\"View\">\r\n              <Link to={`/viewer?gameId=${rest.gameId}`}>\r\n                <Button icon={<EyeOutlined />} />\r\n              </Link>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Download\">\r\n              <Button icon={<DownloadOutlined />} {...downloadProps} />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <Button\r\n                onClick={() => deleteSingleHistory(record.gameId)}\r\n                icon={<DeleteOutlined />}\r\n              />\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Title>Game Viewer</Title>\r\n\r\n      {loadedHistory && <Viewer history={loadedHistory} />}\r\n\r\n      <Divider>Saved Rounds</Divider>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={{\r\n          pageSize: 10,\r\n          position: [\"topRight\", \"bottomRight\"],\r\n          showTotal: (total) => `${total} games`,\r\n        }}\r\n      />\r\n\r\n      <DeleteAllModal onDelete={deleteAll} />\r\n    </>\r\n  );\r\n};\r\n","import \"antd/dist/antd.css\";\nimport \"./App.less\";\nimport { Layout } from \"antd\";\nimport {\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport { DocsPage } from \"./pages/docs\";\nimport { GameRunner } from \"./pages/game\";\nimport { HomePage } from \"./pages/Home\";\nimport { ContentPart } from \"./pages/parts/Content\";\nimport { FooterPart } from \"./pages/parts/Footer\";\nimport { HeaderPart } from \"./pages/parts/Header\";\nimport { ControllerTesterPage } from \"./pages/Tester\";\nimport { ViewerPage } from \"./pages/Viewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <HeaderPart />\n        <ContentPart>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/game\" component={GameRunner} />\n            <Route path=\"/viewer\" component={ViewerPage} />\n            <Route path=\"/tester\" component={ControllerTesterPage} />\n            <Route path=\"/docs\" component={DocsPage} />\n          </Switch>\n        </ContentPart>\n        <FooterPart />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["engine/types.ts","pages/docs/lifeCycle.tsx","pages/docs/placeholder.tsx","pages/docs/docs.tsx","controller/adapters/rest.tsx","controller/types.ts","pages/game/ControllerCreator.tsx","pages/game/Run.tsx","engine/positionPool.ts","engine/utils.ts","engine/game.ts","store/index.ts","pages/game/Setup.tsx","pages/game/GameRunner.tsx","store/download.ts","pages/game/Summary.tsx","pages/Home.tsx","pages/parts/Content.tsx","pages/parts/Footer.tsx","pages/parts/Header.tsx","pages/Tester.tsx","theme.ts","viewer/Canvas.tsx","viewer/Snapshot.tsx","viewer/Viewer.tsx","pages/Viewer.tsx","App.tsx","index.tsx"],"names":["GameResult","Move","Title","Typography","Paragraph","Placeholder","SubMenu","Menu","Content","Layout","Sider","contents","title","key","component","level","children","ItemMenus","props","url","c","map","icon","Item","to","console","groupEnd","ItemRoute","allRoutes","dfs","parentUrl","forEach","push","path","DocsPage","useRouteMatch","itemMenus","itemRoutes","width","selectable","mode","style","height","multiple","className","margin","paddingTop","axiosOptions","headers","timeout","RestController","init","payload","a","params","playerNumber","axios","post","response","data","update","state","end","this","RestControllerFactory","Selector","onChange","onChangeCallback","useCallback","e","target","value","label","prefix","GlobalOutlined","create","isController","controller","availableFactories","ControllerCreator","onControllerChange","onNext","useState","factoriesWithID","setFactoriesWithID","controllers","useMemo","selectorChange","pos","factory","filter","selectorFields","display","align","type","DeleteOutlined","onClick","undefined","selectorCreateButtons","PlusOutlined","uniqueId","placement","disabled","length","RunStage","isPos","Array","isArray","PositionPool","gameState","pool","generatePool","positions","meta","food","gridSize","taken","flatten","concat","fill","_","i","Math","floor","p","some","t","isEqual","next","random","splice","empty","gameHistorySummarise","history","lastFrame","winnerCount","playerAlive","result","TIMEOUT","WINNER","DRAW","winner","findIndex","ticks","h","omit","timeStamp","Date","toISOString","tickCount","defaultOptions","maxTicks","Game","options","onGameTick","controllersReady","initState","Promise","all","gameId","playerCount","every","r","Error","JSON","stringify","allStates","tick","copy","cloneDeep","newState","lastMoves","uuidv4","posPool","catch","NOP","controllerMoves","apply","oldState","newHeads","move","player","notification","error","message","description","duration","currentHead","moveVec","NORTH","SOUTH","EAST","WEST","moveToVector2d","head","bounds","eatenFoodIndex","Set","collides","add","pop","allBodies","flat","unshift","positionPool","has","StoreKeys","Run","onTickUpdate","tickProgress","round","setState","onCancel","onPrev","stateUpdate","g","runStage","game","CONTROLLER_INIT","initControllers","then","GAME_RUN","err","ERROR_STATE","errorTitle","errorDesc","run","gameComplete","GAME_OVER","statusMessage","showIcon","UNSET","prevState","body","progressStatus","direction","justifyContent","alignItems","percent","status","size","danger","React","Component","GameSetup","onConfigChange","setGridSize","setMaxTicks","changeCallback","onMaxTicksChange","onGridSizeChange","useEffect","min","max","defaultValue","SetupStage","getHistories","histories","store","get","HISTORIES","Object","values","sort","b","valueOf","createDownloadHref","gameHistory","jsonBlob","Blob","href","URL","createObjectURL","download","Panel","Collapse","Summary","onSave","set","addHistory","downloadProps","TrophyOutlined","MehOutlined","HourglassOutlined","EyeOutlined","SaveOutlined","DownloadOutlined","header","Step","Steps","GameRunner","CONTROLLER_CREATOR","currentStage","setCurrentStage","setControllers","setOptions","setGameHistory","creatorCallback","completeCallback","nextCallback","SUMMARY","prevCallback","current","GAME_SETUP","PLAYING","HomePage","ContentPart","Footer","FooterPart","Header","HeaderPart","theme","TabPane","Tabs","dummyId","sampleIniData","sampleStateData","ControllerTesterPage","setController","setResponse","sendData","setSendData","loaderCallback","iniTestCallback","stateTestCallback","endTestCallback","defaultActiveKey","tab","gutter","span","contrastColours","getColour","number","CANVAS_SIZE","posToCanvas","partSize","Canvas","canvasRef","useRef","useLayoutEffect","canvas","ctx","getContext","clearRect","lineWidth","strokeStyle","strokeRect","clearCanvas","snake","colour","headX","headY","lineCap","beginPath","moveTo","x","y","lineTo","stroke","drawSnake","fillStyle","arc","PI","drawFood","ref","StateSnapshot","frame","playerData","alive","lastMove","position","columns","dataIndex","render","backgroundColor","CheckCircleOutlined","CloseCircleOutlined","ellipsis","dataSource","pagination","expandable","expandedRowRender","record","Viewer","setTick","sliderChange","justify","marginLeft","marginRight","DeleteAllModal","onDelete","openModal","Modal","warning","closable","okText","okCancel","okButtonProps","content","onOk","ViewerPage","routerHistory","useHistory","reverse","savedGames","setSavedGames","loadedHistory","setLoadedHistory","query","URLSearchParams","useLocation","search","deleteAll","id","selected","find","sorter","compare","toString","localeCompare","color","humanDate","rest","removeHistory","pageSize","showTotal","total","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19d028bb.chunk.js","sourcesContent":["export type GameOptions = {\r\n  gridSize: number;\r\n  maxTicks: number;\r\n};\r\n\r\nexport enum GameResult {\r\n  DRAW = \"DRAW\",\r\n  WINNER = \"WINNER\",\r\n  TIMEOUT = \"TIMEOUT\",\r\n}\r\n\r\nexport type MetalessGameState = Omit<GameState, \"meta\">;\r\nexport type GameHistory = {\r\n  tickCount: number;\r\n  ticks: MetalessGameState[];\r\n  winner: number | null;\r\n  result: GameResult;\r\n  gridSize: number;\r\n  playerCount: number;\r\n  gameId: string;\r\n  timeStamp: string;\r\n};\r\n\r\nexport type GameOptionsOptionals = {};\r\n\r\nexport enum Move {\r\n  NORTH = \"N\",\r\n  SOUTH = \"S\",\r\n  EAST = \"E\",\r\n  WEST = \"W\",\r\n  NOP = \"X\",\r\n}\r\n\r\nexport type Pos = [number, number];\r\n\r\nexport type GameState = {\r\n  tick: number;\r\n  positions: Array<Pos[]>;\r\n  food: Pos[];\r\n  playerAlive: boolean[];\r\n  lastMoves: Move[];\r\n  meta: {\r\n    gridSize: number;\r\n    playerCount: number;\r\n    gameId: string;\r\n  };\r\n};\r\n\r\nexport const isPos = (pos: any): pos is Pos => {\r\n  return Array.isArray(pos) && pos.length === 2;\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport const LifeCycle: React.FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <Title level={2}>Life Cycle</Title>\r\n      <Paragraph>\r\n        A game takes place over 3 stages. 1. Setup 2. Play 3. Summary\r\n      </Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Placeholder: React.FunctionComponent = () => {\r\n  return <>Not implemented...</>;\r\n};\r\n","import { Layout, Menu, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { LifeCycle } from \"./lifeCycle\";\r\nimport { Placeholder } from \"./placeholder\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Title } = Typography;\r\nconst { Content, Sider } = Layout;\r\n\r\ntype ContentsItem = {\r\n  title: string;\r\n  key: string;\r\n  component?: React.ComponentType<any>;\r\n  children?: ContentsItem[];\r\n  icon?: JSX.Element;\r\n};\r\n\r\nconst contents: ContentsItem[] = [\r\n  { title: \"Getting started\", key: \"getting-started\", component: Placeholder },\r\n  { title: \"Life cylce\", key: \"life-cycle\", component: LifeCycle },\r\n  {\r\n    title: \"Controllers\",\r\n    key: \"controllers\",\r\n    children: [{ title: \"REST\", key: \"rest\", component: Placeholder }],\r\n  },\r\n];\r\n\r\ntype ItemMenusProps = { contents: ContentsItem[]; url: string };\r\nconst ItemMenus: React.FunctionComponent<ItemMenusProps> = (props) => {\r\n  const { contents, url } = props;\r\n  const c = contents.map(({ children, title, key, icon, component }) => {\r\n    if (children) {\r\n      return (\r\n        <SubMenu key={key} title={title} icon={icon}>\r\n          <ItemMenus contents={children} url={`${url}/${key}`} />\r\n        </SubMenu>\r\n      );\r\n    } else if (component) {\r\n      return (\r\n        <Menu.Item key={key} icon={icon}>\r\n          <Link to={`${url}/${key}`}>{title}</Link>\r\n        </Menu.Item>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n  console.groupEnd();\r\n  return <>{c}</>;\r\n};\r\n\r\ntype ItemRouteProps = { contents: ContentsItem[]; url: string };\r\nconst ItemRoute: React.FunctionComponent<ItemRouteProps> = (props) => {\r\n  const allRoutes: JSX.Element[] = [];\r\n  const dfs = (contents: ContentsItem[], parentUrl: string) => {\r\n    contents.forEach(({ children, key, component }) => {\r\n      if (children) {\r\n        dfs(children, `${parentUrl}/${key}`);\r\n      } else if (component) {\r\n        allRoutes.push(\r\n          <Route key={key} path={`${parentUrl}/${key}`} component={component} />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  dfs(props.contents, props.url);\r\n  return <>{allRoutes}</>;\r\n};\r\n\r\nexport const DocsPage: React.FunctionComponent = () => {\r\n  let { url } = useRouteMatch();\r\n\r\n  const itemMenus = <ItemMenus contents={contents} url={url} />;\r\n  const itemRoutes = <ItemRoute contents={contents} url={url} />;\r\n\r\n  return (\r\n    <>\r\n      <Title>Docs</Title>\r\n      <Layout>\r\n        <Sider width={200}>\r\n          <Menu\r\n            selectable={false}\r\n            mode=\"inline\"\r\n            style={{ height: \"100%\" }}\r\n            multiple={false}\r\n          >\r\n            {itemMenus}\r\n          </Menu>\r\n        </Sider>\r\n        <Content className=\"content\" style={{ margin: 0, paddingTop: 0 }}>\r\n          <Switch>{itemRoutes}</Switch>\r\n        </Content>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n","import { Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback } from \"react\";\r\nimport { GlobalOutlined } from \"@ant-design/icons\";\r\nimport { GameState } from \"../../engine/types\";\r\nimport { Controller, ControllerFactory, ControllerSelector, InitPayload } from \"../types\";\r\n\r\nconst axiosOptions = {\r\n  headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n  timeout: 2000,\r\n};\r\n\r\nexport class RestController implements Controller {\r\n  private url: string;\r\n\r\n  constructor(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  init = async (payload: InitPayload) => {\r\n    const params = { playerNumber: payload.playerNumber };\r\n    const response = await axios.post(this.url + \"/init\", payload, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n    return response.data;\r\n  };\r\n\r\n  update = async (state: GameState, playerNumber?: number) => {\r\n    const params = { playerNumber };\r\n    const response = await axios.post(this.url + \"/update\", state, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n    return response.data;\r\n  };\r\n\r\n  end = async (state: GameState, playerNumber?: number) => {\r\n    const params = { playerNumber };\r\n    const response = await axios.post(this.url + \"/end\", state, {\r\n      ...axiosOptions,\r\n      params,\r\n    });\r\n\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport const RestControllerSelector: ControllerSelector = ({ onChange }) => {\r\n  const onChangeCallback = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange(e.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n  return (\r\n    <Form.Item label=\"Address\">\r\n      <Input prefix={<GlobalOutlined />} onChange={onChangeCallback} />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport const RestControllerFactory: ControllerFactory = {\r\n  Selector: RestControllerSelector,\r\n  create: (value) => new RestController(value),\r\n  label: \"REST\",\r\n};\r\n","import React from \"react\";\r\nimport { GameState, Move } from \"../engine/types\";\r\n\r\nexport type InitPayload = {\r\n  gameId: string;\r\n  gridSize: number;\r\n  playerCount: number;\r\n  playerNumber: number;\r\n};\r\n\r\nexport interface Controller {\r\n  init: (initPayload: InitPayload) => Promise<void>;\r\n  update: (state: GameState, playerNumber?: number) => Promise<Move>;\r\n  end: (gameState: GameState, playerNumber?: number) => Promise<void>;\r\n}\r\n\r\nexport type ControllerSelector =\r\n  React.FunctionComponent<ControllerSelectorProps>;\r\n\r\nexport interface ControllerFactory {\r\n  Selector: ControllerSelector;\r\n  create: (value: string) => Controller;\r\n  label: string;\r\n}\r\n\r\nexport type ControllerSelectorProps = {\r\n  onChange?: (value: string) => void;\r\n};\r\n\r\nexport const isController = (\r\n  controller: Controller | undefined\r\n): controller is Controller => {\r\n  return !!controller;\r\n};\r\n","import { Button, Divider, Form, Space, Tooltip } from \"antd\";\r\nimport { uniqueId } from \"lodash\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { RestControllerFactory } from \"../../controller/adapters/rest\";\r\nimport { Controller, ControllerFactory, isController } from \"../../controller/types\";\r\n\r\nexport type ControllerCreatorProps = {\r\n  onControllerChange: (controllers: Controller[]) => void;\r\n  onNext: () => void;\r\n};\r\n\r\nconst availableFactories: ControllerFactory[] = [RestControllerFactory];\r\n\r\nexport const ControllerCreator: React.FunctionComponent<ControllerCreatorProps> =\r\n  ({ onControllerChange, onNext }) => {\r\n    const [factoriesWithID, setFactoriesWithID] = useState<\r\n      Array<{ key: string; factory: ControllerFactory }>\r\n    >([]);\r\n    const controllers: Array<Controller | undefined> = useMemo(() => [], []);\r\n\r\n    const selectorChange = useCallback(\r\n      (pos) => (value: string) => {\r\n        controllers[pos] = factoriesWithID[pos].factory.create(value);\r\n        onControllerChange(controllers.filter(isController));\r\n      },\r\n      [onControllerChange, controllers, factoriesWithID]\r\n    );\r\n\r\n    const selectorFields = useMemo(\r\n      () =>\r\n        factoriesWithID.map(({ key, factory }, pos) => (\r\n          <Space style={{ display: \"flex\" }} align=\"baseline\" key={key}>\r\n            <factory.Selector onChange={selectorChange(pos)} />\r\n            <Button\r\n              type=\"text\"\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                setFactoriesWithID(\r\n                  factoriesWithID.filter(({ key: k }) => k !== key)\r\n                );\r\n                controllers[pos] = undefined;\r\n                onControllerChange(controllers.filter(isController));\r\n              }}\r\n            />\r\n          </Space>\r\n        )),\r\n      [\r\n        factoriesWithID,\r\n        setFactoriesWithID,\r\n        controllers,\r\n        selectorChange,\r\n        onControllerChange,\r\n      ]\r\n    );\r\n\r\n    const selectorCreateButtons = useMemo(() => {\r\n      return availableFactories.map((factory, pos) => {\r\n        return (\r\n          <Button\r\n            key={pos}\r\n            type=\"dashed\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => {\r\n              setFactoriesWithID([\r\n                ...factoriesWithID,\r\n                { key: uniqueId(factory.label), factory },\r\n              ]);\r\n            }}\r\n          >\r\n            Add {factory.label} controller\r\n          </Button>\r\n        );\r\n      });\r\n    }, [factoriesWithID, setFactoriesWithID]);\r\n\r\n    return (\r\n      <>\r\n        <Form>{selectorFields}</Form>\r\n        <Space>{selectorCreateButtons}</Space>\r\n        <Divider />\r\n        <Tooltip\r\n          title=\"You must specifiy at least 2 controllers\"\r\n          placement=\"right\"\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={onNext}\r\n            disabled={controllers.length < 2}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n","import { Alert, Button, Progress, ProgressProps, Space, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { Game } from \"../../engine/game\";\r\nimport { GameHistory, GameOptions } from \"../../engine/types\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport type RunProps = {\r\n  controllers?: Controller[];\r\n  onPrev: () => void;\r\n  onNext: () => void;\r\n  options?: GameOptions;\r\n  gameComplete: (history: GameHistory) => void;\r\n};\r\n\r\nexport enum RunStage {\r\n  UNSET,\r\n  CONTROLLER_INIT,\r\n  ERROR_STATE,\r\n  GAME_RUN,\r\n  GAME_OVER,\r\n}\r\n\r\nexport type RunState = {\r\n  errorTitle?: string;\r\n  errorDesc?: string;\r\n  game?: Game;\r\n  runStage: RunStage;\r\n  history?: GameHistory;\r\n  tickProgress: number;\r\n};\r\n\r\nexport class Run extends React.Component<RunProps, RunState> {\r\n  constructor(props: RunProps) {\r\n    super(props);\r\n    this.state = {\r\n      runStage: RunStage.UNSET,\r\n      tickProgress: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(_: RunProps, prevState: RunState) {\r\n    if (prevState.runStage !== this.state.runStage) {\r\n      this.stateUpdate();\r\n    }\r\n  }\r\n\r\n  onTickUpdate = (tick: number) => {\r\n    const { options } = this.props;\r\n    if (!options) {\r\n      return;\r\n    }\r\n    const tickProgress = Math.round((tick / options.maxTicks) * 100);\r\n    this.setState({ tickProgress });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { controllers, options } = this.props;\r\n\r\n    if (!controllers || !controllers.length || !options) {\r\n      this.setState({\r\n        runStage: RunStage.ERROR_STATE,\r\n        errorTitle: \"Missing controllers or options?\",\r\n        errorDesc:\r\n          JSON.stringify(controllers, null, 2) +\r\n          \"\\n\" +\r\n          JSON.stringify(options, null, 2),\r\n      });\r\n      return;\r\n    }\r\n\r\n    const game = new Game(controllers, options, this.onTickUpdate);\r\n    this.setState({ game, runStage: RunStage.CONTROLLER_INIT });\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.onPrev();\r\n  };\r\n\r\n  stateUpdate = (g?: Game) => {\r\n    const { runStage, game } = this.state;\r\n    if (!game) {\r\n      this.setState({\r\n        runStage: RunStage.ERROR_STATE,\r\n        errorTitle: \"No game object available\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    switch (runStage) {\r\n      case RunStage.CONTROLLER_INIT:\r\n        game\r\n          .initControllers()\r\n          .then(() => {\r\n            this.setState({ runStage: RunStage.GAME_RUN });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              runStage: RunStage.ERROR_STATE,\r\n              errorTitle: \"Error initialising controllers\",\r\n              errorDesc: err.message,\r\n            });\r\n          });\r\n        break;\r\n      case RunStage.GAME_RUN:\r\n        game\r\n          .run()\r\n          .then((history) => {\r\n            this.props.gameComplete(history);\r\n            this.setState({\r\n              runStage: RunStage.GAME_OVER,\r\n              history,\r\n            });\r\n            this.props.onNext();\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              runStage: RunStage.ERROR_STATE,\r\n              errorTitle: \"Error running game\",\r\n              errorDesc: err.message,\r\n            });\r\n          });\r\n        break;\r\n    }\r\n  };\r\n\r\n  statusMessage = () => {\r\n    const { runStage, errorDesc, errorTitle } = this.state;\r\n    switch (runStage) {\r\n      case RunStage.CONTROLLER_INIT:\r\n        return <Title level={3}>Initialising controllers...</Title>;\r\n      case RunStage.ERROR_STATE:\r\n        return (\r\n          <Alert\r\n            message={errorTitle}\r\n            description={<pre>{errorDesc}</pre>}\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        );\r\n      case RunStage.GAME_RUN:\r\n        return <Title level={3}>Running...</Title>;\r\n      case RunStage.GAME_OVER:\r\n        return <Title level={3}>Game complete!</Title>;\r\n      default:\r\n        return (\r\n          <Alert message=\"Game unset!? Contact dev\" type=\"warning\" showIcon />\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const body = this.statusMessage();\r\n\r\n    const { tickProgress, runStage } = this.state;\r\n    let progressStatus: ProgressProps[\"status\"] = \"normal\";\r\n    if (runStage === RunStage.GAME_RUN) {\r\n      progressStatus = \"active\";\r\n    } else if (runStage === RunStage.GAME_OVER) {\r\n      progressStatus = \"success\";\r\n    } else if (runStage === RunStage.ERROR_STATE) {\r\n      progressStatus = \"exception\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Space\r\n          direction=\"vertical\"\r\n          style={{\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {body}\r\n          <Progress\r\n            type=\"circle\"\r\n            percent={tickProgress}\r\n            status={progressStatus}\r\n          />\r\n          <br />\r\n          <Button size=\"large\" onClick={this.onCancel} danger>\r\n            Cancel\r\n          </Button>\r\n        </Space>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { flatten, isEqual } from \"lodash\";\r\nimport { GameState, isPos, Pos } from \"./types\";\r\n\r\nexport class PositionPool {\r\n  private gameState: GameState;\r\n  private pool: Pos[];\r\n\r\n  constructor(gameState: GameState) {\r\n    this.gameState = gameState;\r\n    this.pool = this.generatePool();\r\n  }\r\n\r\n  private generatePool = () => {\r\n    const { positions, meta, food } = this.gameState;\r\n    const width = meta.gridSize;\r\n    const taken = flatten(positions).concat(food);\r\n    return new Array(width * width)\r\n      .fill(0)\r\n      .map((_, i) => [i % width, Math.floor(i / width)])\r\n      .filter((p) => !taken.some((t) => isEqual(t, p)))\r\n      .filter(isPos);\r\n  };\r\n\r\n  public next = () => {\r\n    const i = Math.floor(Math.random() * this.pool.length);\r\n    return this.pool.splice(i, 1)[0];\r\n  };\r\n\r\n  public empty = () => this.pool.length === 0;\r\n}\r\n","import { omit } from \"lodash\";\r\nimport { GameHistory, GameResult, GameState, Move, Pos } from \"./types\";\r\n\r\nexport const randomPos = (bounds: number): Pos => {\r\n  return [\r\n    Math.floor(Math.random() * bounds),\r\n    Math.floor(Math.random() * bounds),\r\n  ];\r\n};\r\n\r\nexport const moveToVector2d = (move: Move): [number, number] => {\r\n  const vecs: { [key: string]: [number, number] } = {\r\n    [Move.NORTH]: [0, -1],\r\n    [Move.SOUTH]: [0, 1],\r\n    [Move.EAST]: [1, 0],\r\n    [Move.WEST]: [-1, 0],\r\n  };\r\n  return vecs[move];\r\n};\r\n\r\nexport const withinBounds = (pos: Pos, bounds: number): boolean => {\r\n  return pos.every((p) => p >= 0 && p < bounds);\r\n};\r\n\r\nexport const gameHistorySummarise = (history: GameState[]): GameHistory => {\r\n  const lastFrame = history[history.length - 1];\r\n  const meta = lastFrame.meta;\r\n  const winnerCount = lastFrame.playerAlive.filter((p) => p).length;\r\n  const result =\r\n    winnerCount > 1\r\n      ? GameResult.TIMEOUT\r\n      : winnerCount === 1\r\n      ? GameResult.WINNER\r\n      : GameResult.DRAW;\r\n\r\n  let winner = null;\r\n  if (result === GameResult.WINNER) {\r\n    winner = lastFrame.playerAlive.findIndex((p) => p);\r\n  }\r\n  const ticks = history.map((h) => omit(h, [\"meta\"]));\r\n  const timeStamp = new Date().toISOString();\r\n  return {\r\n    ...meta,\r\n    tickCount: ticks.length,\r\n    ticks,\r\n    winner,\r\n    timeStamp,\r\n    result,\r\n  };\r\n};\r\n","import { notification } from \"antd\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Controller } from \"../controller/types\";\r\nimport { PositionPool } from \"./positionPool\";\r\nimport { GameOptions, GameState, isPos, Move, Pos } from \"./types\";\r\nimport { gameHistorySummarise, moveToVector2d, withinBounds } from \"./utils\";\r\n\r\nconst defaultOptions: GameOptions = {\r\n  gridSize: 50,\r\n  maxTicks: 1000,\r\n};\r\n\r\nexport class Game {\r\n  controllers: Controller[];\r\n  options: GameOptions;\r\n  gameState: GameState;\r\n  controllersReady: boolean[];\r\n  onGameTick: (tick: number) => void;\r\n\r\n  constructor(\r\n    controllers: Controller[],\r\n    options?: GameOptions,\r\n    onGameTick?: (tick: number) => void\r\n  ) {\r\n    this.controllers = controllers;\r\n    this.options = { ...defaultOptions, ...options };\r\n    this.gameState = this.initState(controllers, this.options);\r\n    this.controllersReady = new Array(controllers.length).fill(false);\r\n    this.onGameTick = onGameTick ?? (() => {});\r\n  }\r\n\r\n  public async initControllers() {\r\n    await Promise.all(\r\n      this.controllers.map(async (c, i) => {\r\n        await c.init({\r\n          playerNumber: i,\r\n          gameId: this.gameState.meta.gameId,\r\n          gridSize: this.gameState.meta.gridSize,\r\n          playerCount: this.gameState.meta.playerCount,\r\n        });\r\n        this.controllersReady[i] = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public async run() {\r\n    if (!this.controllersReady.every((r) => r)) {\r\n      throw new Error(\r\n        \"Controllers are not ready. \" + JSON.stringify(this.controllersReady)\r\n      );\r\n    }\r\n\r\n    const allStates: GameState[] = [];\r\n    while (\r\n      this.gameState.playerAlive.filter((p) => p).length > 1 &&\r\n      this.gameState.tick < this.options.maxTicks\r\n    ) {\r\n      const copy = cloneDeep(this.gameState);\r\n      allStates.push(copy);\r\n      await this.update();\r\n      this.onGameTick(this.gameState.tick);\r\n    }\r\n    const copy = cloneDeep(this.gameState);\r\n    allStates.push(copy);\r\n    this.onGameTick(this.gameState.tick);\r\n\r\n    await Promise.all(\r\n      this.controllers.map(async (c, i) => await c.end(this.gameState, i))\r\n    );\r\n\r\n    return gameHistorySummarise(allStates);\r\n  }\r\n\r\n  private initState(\r\n    controllers: Controller[],\r\n    options: GameOptions\r\n  ): GameState {\r\n    const playerCount = controllers.length;\r\n    const newState: GameState = {\r\n      tick: 0,\r\n      positions: [],\r\n      lastMoves: [],\r\n      food: [],\r\n      playerAlive: new Array(playerCount).fill(true),\r\n      meta: {\r\n        playerCount,\r\n        gameId: uuidv4(),\r\n        gridSize: options.gridSize,\r\n      },\r\n    };\r\n\r\n    const posPool = new PositionPool(newState);\r\n\r\n    newState.positions = new Array(playerCount)\r\n      .fill(null)\r\n      .map(() => [posPool.next()]);\r\n    newState.food = new Array(playerCount).fill(null).map(() => posPool.next());\r\n    return newState;\r\n  }\r\n\r\n  public async update() {\r\n    const controllerMoves = await Promise.all(\r\n      this.controllers.map(async (c, i) => {\r\n        if (this.gameState.playerAlive[i]) {\r\n          return await c.update(this.gameState, i).catch(() => null);\r\n        } else {\r\n          return Move.NOP;\r\n        }\r\n      })\r\n    );\r\n\r\n    const newState = this.apply(this.gameState, controllerMoves);\r\n    this.gameState = newState;\r\n    return this.gameState;\r\n  }\r\n\r\n  private apply(\r\n    oldState: GameState,\r\n    controllerMoves: (Move | null)[]\r\n  ): GameState {\r\n    const newState = { ...oldState };\r\n\r\n    newState.tick = oldState.tick + 1;\r\n\r\n    const newHeads = controllerMoves.map((move, player) => {\r\n      if (move === Move.NOP) {\r\n        newState.playerAlive[player] = false;\r\n        return null;\r\n      }\r\n\r\n      if (move === null) {\r\n        notification.error({\r\n          message: `Player ${player} disqualified`,\r\n          description: `Player ${player} has been disqualified. Either the controller has crashed or it returned an invalid move.`,\r\n          duration: 0,\r\n        });\r\n        newState.playerAlive[player] = false;\r\n        return null;\r\n      }\r\n\r\n      if (!oldState.playerAlive[player]) {\r\n        return null;\r\n      }\r\n\r\n      newState.lastMoves[player] = move;\r\n      const currentHead = oldState.positions[player][0];\r\n      const moveVec = moveToVector2d(move);\r\n      return [currentHead[0] + moveVec[0], currentHead[1] + moveVec[1]] as Pos;\r\n    });\r\n\r\n    // Check out of bounds\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      if (!withinBounds(head, newState.meta.gridSize)) {\r\n        newState.playerAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Check head collisions\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = newHeads\r\n        .filter((p) => p !== null && p[0] === head[0] && p[1] === head[1])\r\n        .filter(isPos).length;\r\n\r\n      // Collides with more than self\r\n      if (collides > 1) {\r\n        newState.playerAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Eat or shrink\r\n    const eatenFoodIndex: Set<number> = new Set();\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = newState.food.findIndex(\r\n        (p) => p !== null && p[0] === head[0] && p[1] === head[1]\r\n      );\r\n\r\n      if (collides !== -1) {\r\n        // Eats food\r\n        eatenFoodIndex.add(collides);\r\n      } else {\r\n        // Shrinks\r\n        newState.positions[player].pop();\r\n      }\r\n    });\r\n\r\n    // Detect head vs body collisions\r\n    const allBodies = newState.positions.flat();\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      const collides = allBodies.findIndex(\r\n        (p) => p !== null && p[0] === head[0] && p[1] === head[1]\r\n      );\r\n      if (collides !== -1) {\r\n        newState.playerAlive[player] = false;\r\n      }\r\n    });\r\n\r\n    // Commit to new heads\r\n    newHeads.forEach((head, player) => {\r\n      if (head === null) {\r\n        return;\r\n      }\r\n      newState.positions[player].unshift(head);\r\n    });\r\n\r\n    // Replace eaten food\r\n    const positionPool = new PositionPool(newState);\r\n    newState.food = newState.food\r\n      .map((p, i) => {\r\n        if (eatenFoodIndex.has(i)) {\r\n          if (positionPool.empty()) {\r\n            return undefined;\r\n          }\r\n          return positionPool.next();\r\n        }\r\n        return p;\r\n      })\r\n      .filter(isPos);\r\n    return newState;\r\n  }\r\n}\r\n","import store from \"store\";\r\nimport { GameHistory } from \"../engine/types\";\r\n\r\nexport const enum StoreKeys {\r\n  HISTORIES = \"histories\",\r\n}\r\n\r\nexport const getHistories = (): GameHistory[] => {\r\n  const histories = store.get(StoreKeys.HISTORIES) || {};\r\n  return Object.values(histories as GameHistory[]).sort(\r\n    (a, b) => new Date(a.timeStamp).valueOf() - new Date(b.timeStamp).valueOf()\r\n  );\r\n};\r\n\r\nexport const addHistory = (history: GameHistory): void => {\r\n  const histories = store.get(StoreKeys.HISTORIES) || {};\r\n\r\n  store.set(StoreKeys.HISTORIES, { ...histories, [history.gameId]: history });\r\n};\r\n\r\nexport const removeHistory = (id: string): GameHistory[] => {\r\n  const histories = store.get(StoreKeys.HISTORIES) || {};\r\n  histories[id] = undefined;\r\n  store.set(StoreKeys.HISTORIES, histories);\r\n  return getHistories();\r\n};\r\n\r\nexport const clearHistories = (): void => {\r\n  store.set(StoreKeys.HISTORIES, {});\r\n};\r\n","import { Button, Form, InputNumber, Space } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nexport type GameSetupProps = {\r\n  onConfigChange: (options: GameOptions) => void;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const GameSetup: React.FunctionComponent<GameSetupProps> = ({\r\n  onConfigChange,\r\n  onNext,\r\n  onPrev,\r\n}) => {\r\n  const [gridSize, setGridSize] = React.useState(50);\r\n  const [maxTicks, setMaxTicks] = React.useState(1000);\r\n\r\n  const changeCallback = useCallback(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  const onMaxTicksChange = useCallback(\r\n    (value: number) => {\r\n      setMaxTicks(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setMaxTicks]\r\n  );\r\n\r\n  const onGridSizeChange = useCallback(\r\n    (value: number) => {\r\n      setGridSize(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setGridSize]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Item label=\"Max ticks\">\r\n          <InputNumber\r\n            min={1}\r\n            max={10000}\r\n            defaultValue={1000}\r\n            value={maxTicks}\r\n            onChange={onMaxTicksChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Grid size\">\r\n          <InputNumber\r\n            min={10}\r\n            max={1000}\r\n            defaultValue={50}\r\n            value={gridSize}\r\n            onChange={onGridSizeChange}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Space>\r\n        <Button onClick={onPrev}>Previous</Button>\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Start\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n","import { Steps, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { GameHistory, GameOptions } from \"../../engine/types\";\r\nimport { ControllerCreator } from \"./ControllerCreator\";\r\nimport { Run } from \"./Run\";\r\nimport { GameSetup } from \"./Setup\";\r\nimport { Summary } from \"./Summary\";\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nexport type GamePageProps = {};\r\n\r\nenum SetupStage {\r\n  CONTROLLER_CREATOR,\r\n  GAME_SETUP,\r\n  PLAYING,\r\n  SUMMARY,\r\n}\r\n\r\nexport const GameRunner: React.FunctionComponent<GamePageProps> = () => {\r\n  const [currentStage, setCurrentStage] = useState(\r\n    SetupStage.CONTROLLER_CREATOR\r\n  );\r\n\r\n  const [controllers, setControllers] = useState<Controller[]>([]);\r\n  const [options, setOptions] = useState<GameOptions | undefined>();\r\n  const [gameHistory, setGameHistory] = useState<GameHistory | undefined>();\r\n\r\n  const creatorCallback = useCallback(\r\n    (controllers) => {\r\n      setControllers(controllers);\r\n    },\r\n    [setControllers]\r\n  );\r\n\r\n  const onConfigChange = useCallback(\r\n    (options) => {\r\n      setOptions(options);\r\n    },\r\n    [setOptions]\r\n  );\r\n\r\n  const completeCallback = useCallback(\r\n    (history) => {\r\n      setGameHistory(history);\r\n    },\r\n    [setGameHistory]\r\n  );\r\n\r\n  const nextCallback = useCallback(() => {\r\n    setCurrentStage((currentStage + 1) % (SetupStage.SUMMARY + 1));\r\n  }, [currentStage, setCurrentStage]);\r\n  const prevCallback = useCallback(() => {\r\n    setCurrentStage((currentStage - 1) % (SetupStage.SUMMARY + 1));\r\n  }, [currentStage, setCurrentStage]);\r\n\r\n  return (\r\n    <>\r\n      <Title>Play a Game</Title>\r\n      <Steps current={currentStage}>\r\n        <Step title=\"Controller Creator\" />\r\n        <Step title=\"Game Setup\" />\r\n        <Step title=\"Running\" />\r\n        <Step title=\"Summary\" />\r\n      </Steps>\r\n\r\n      <br />\r\n      {currentStage === SetupStage.CONTROLLER_CREATOR && (\r\n        <ControllerCreator\r\n          onControllerChange={creatorCallback}\r\n          onNext={nextCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.GAME_SETUP && (\r\n        <GameSetup\r\n          onConfigChange={onConfigChange}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.PLAYING && (\r\n        <Run\r\n          controllers={controllers}\r\n          options={options}\r\n          onPrev={prevCallback}\r\n          onNext={nextCallback}\r\n          gameComplete={completeCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.SUMMARY && (\r\n        <Summary\r\n          gameHistory={gameHistory}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { GameHistory } from \"../engine/types\";\r\n\r\nexport const createDownloadHref = (gameHistory: GameHistory) => {\r\n  const jsonBlob = new Blob([JSON.stringify(gameHistory, null, 2)], {\r\n    type: \"text/json\",\r\n  });\r\n  const href = URL.createObjectURL(jsonBlob);\r\n  const download = `${gameHistory.timeStamp}.json`;\r\n\r\n  return {\r\n    href,\r\n    download,\r\n  };\r\n};\r\n","import { Button, Collapse, Divider, Result, Space, Typography } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    DownloadOutlined, EyeOutlined, HourglassOutlined, MehOutlined, SaveOutlined, TrophyOutlined\r\n} from \"@ant-design/icons\";\r\nimport { GameHistory, GameResult } from \"../../engine/types\";\r\nimport { addHistory } from \"../../store\";\r\nimport { createDownloadHref } from \"../../store/download\";\r\n\r\nconst { Panel } = Collapse;\r\nconst { Paragraph } = Typography;\r\n\r\nexport type SummaryProps = {\r\n  gameHistory?: GameHistory;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const Summary: React.FunctionComponent<SummaryProps> = (props) => {\r\n  const { gameHistory, onNext, onPrev } = props;\r\n  const onSave = useCallback(() => {\r\n    if (gameHistory) {\r\n      addHistory(gameHistory);\r\n    }\r\n  }, [gameHistory]);\r\n\r\n  if (!gameHistory) {\r\n    return <div>Error: No game history specified</div>;\r\n  }\r\n\r\n  const downloadProps = createDownloadHref(gameHistory);\r\n\r\n  let result = (\r\n    <Result\r\n      icon={<TrophyOutlined />}\r\n      status=\"success\"\r\n      title={\"Player \" + gameHistory.winner + \" wins!\"}\r\n    />\r\n  );\r\n\r\n  if (gameHistory.result === GameResult.DRAW) {\r\n    result = <Result icon={<MehOutlined />} status=\"warning\" title={\"Draw!\"} />;\r\n  } else if (gameHistory.result === GameResult.TIMEOUT) {\r\n    result = (\r\n      <Result icon={<HourglassOutlined />} status=\"warning\" title={\"Timeout\"} />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {result}\r\n      <Space>\r\n        <Button onClick={onPrev} type=\"primary\">\r\n          Play again\r\n        </Button>\r\n        <Button onClick={onNext}>New game</Button>\r\n        <Link to={`/viewer?gameId=${gameHistory?.gameId}`}>\r\n          <Button icon={<EyeOutlined />}>Show in viewer</Button>\r\n        </Link>\r\n        <Button icon={<SaveOutlined />} onClick={onSave}>\r\n          Save to local storage\r\n        </Button>\r\n        <Button icon={<DownloadOutlined />} {...downloadProps}>\r\n          Download replay\r\n        </Button>\r\n      </Space>\r\n\r\n      <Divider />\r\n\r\n      <Collapse>\r\n        <Panel header=\"Full Game History\" key=\"1\">\r\n          <Paragraph>\r\n            <pre>{JSON.stringify(gameHistory, null, 2)}</pre>\r\n          </Paragraph>\r\n        </Panel>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type HomePageProps = {};\r\n\r\nexport const HomePage: React.FunctionComponent<HomePageProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Title>Snake Tron - Code Fights!</Title>\r\n\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport type ContentPartProps = {};\r\n\r\nexport const ContentPart: React.FunctionComponent<ContentPartProps> = (\r\n  props\r\n) => {\r\n  return <Content className=\"content\">{props.children}</Content>;\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const FooterPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Footer className=\"footer\">\r\n      Created by <a href=\"http://samuel-lewis.com/\">Samuel Lewis</a>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout, Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\"></div>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"game\">\r\n          <Link to=\"/game\">Game</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"viewer\">\r\n          <Link to=\"/viewer\">Viewer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"tester\">\r\n          <Link to=\"/tester\">Controller Tester</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"docs\">\r\n          <Link to=\"/docs\">Docs</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import { Button, Col, Divider, Row, Space, Tabs, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RestControllerFactory } from \"../controller/adapters/rest\";\r\nimport { Controller, InitPayload } from \"../controller/types\";\r\nimport { GameState, Move } from \"../engine/types\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst dummyId = \"48e2ee9e-171e-45bd-8904-a762d8e2b782\";\r\n\r\nconst sampleIniData: InitPayload = {\r\n  playerNumber: 1,\r\n  playerCount: 2,\r\n  gameId: dummyId,\r\n  gridSize: 50,\r\n};\r\n\r\nconst sampleStateData: GameState = {\r\n  tick: 2,\r\n  positions: [\r\n    [\r\n      [42, 31],\r\n      [41, 31],\r\n      [40, 31],\r\n    ],\r\n    [\r\n      [47, 27],\r\n      [47, 28],\r\n    ],\r\n  ],\r\n  lastMoves: [Move.NORTH, Move.SOUTH],\r\n  food: [\r\n    [35, 16],\r\n    [17, 6],\r\n  ],\r\n  playerAlive: [true, true],\r\n  meta: {\r\n    playerCount: 2,\r\n    gameId: dummyId,\r\n    gridSize: 50,\r\n  },\r\n};\r\n\r\nexport type ControllerTesterPageProps = {};\r\n\r\nexport const ControllerTesterPage: React.FunctionComponent<ControllerTesterPageProps> =\r\n  () => {\r\n    const [controller, setController] = useState<Controller | null>(null);\r\n    const [response, setResponse] = useState<string>(\"\");\r\n    const [sendData, setSendData] = useState<string>(\"\");\r\n\r\n    const loaderCallback = useCallback(\r\n      (value) => {\r\n        setController(RestControllerFactory.create(value));\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    const iniTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleIniData, null, 2));\r\n      controller\r\n        ?.init(sampleIniData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const stateTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.update(sampleStateData, 1)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const endTestCallback = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.end(sampleStateData, 1)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    return (\r\n      <>\r\n        <Title>Controller Tester</Title>\r\n\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab={RestControllerFactory.label} key=\"1\">\r\n            <RestControllerFactory.Selector onChange={loaderCallback} />\r\n          </TabPane>\r\n        </Tabs>\r\n        <Space>\r\n          <Button onClick={iniTestCallback}>Test game initialise</Button>\r\n          <Button onClick={stateTestCallback}>Test game update</Button>\r\n          <Button onClick={endTestCallback}>Test game end</Button>\r\n        </Space>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Divider>Sent</Divider>\r\n            <Paragraph>{sendData && <pre>{sendData}</pre>}</Paragraph>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Divider>Response</Divider>\r\n            <Paragraph>{response && <pre>{response}</pre>}</Paragraph>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n","export const contrastColours = [\r\n  \"#e6194B\",\r\n  \"#3cb44b\",\r\n  \"#ffe119\",\r\n  \"#4363d8\",\r\n  \"#f58231\",\r\n  \"#911eb4\",\r\n  \"#42d4f4\",\r\n  \"#f032e6\",\r\n  \"#bfef45\",\r\n  \"#fabed4\",\r\n  \"#469990\",\r\n  \"#dcbeff\",\r\n  \"#9A6324\",\r\n  \"#fffac8\",\r\n  \"#800000\",\r\n  \"#aaffc3\",\r\n  \"#808000\",\r\n  \"#ffd8b1\",\r\n  \"#000075\",\r\n];\r\n\r\nexport const getColour = (number: number) => {\r\n  return contrastColours[number % contrastColours.length];\r\n};\r\n","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { MetalessGameState, Pos } from \"../engine/types\";\r\nimport { getColour } from \"../theme\";\r\n\r\nconst CANVAS_SIZE = 400;\r\n\r\nconst posToCanvas = ([x, y]: Pos, partSize: number) => {\r\n  return [x * partSize + partSize / 2, y * partSize + partSize / 2];\r\n};\r\n\r\nexport type CanvasProps = {\r\n  state: MetalessGameState;\r\n  gridSize: number;\r\n};\r\n\r\nconst clearCanvas = (ctx: CanvasRenderingContext2D) => {\r\n  ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = \"white\";\r\n  ctx.strokeRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n};\r\n\r\nfunction drawSnake(\r\n  ctx: CanvasRenderingContext2D,\r\n  partSize: number,\r\n  snake: Pos[],\r\n  player: number\r\n) {\r\n  const colour = getColour(player);\r\n  const [headX, headY] = posToCanvas(snake[0], partSize);\r\n\r\n  ctx.lineWidth = partSize - 2;\r\n  ctx.strokeStyle = colour;\r\n  ctx.lineCap = \"square\";\r\n  ctx.beginPath();\r\n  ctx.moveTo(headX, headY);\r\n\r\n  snake.forEach((pos) => {\r\n    const [x, y] = posToCanvas(pos, partSize);\r\n    ctx.lineTo(x, y);\r\n  });\r\n\r\n  ctx.stroke();\r\n}\r\n\r\nconst drawFood = (\r\n  ctx: CanvasRenderingContext2D,\r\n  partSize: number,\r\n  pos: Pos\r\n) => {\r\n  const [x, y] = posToCanvas(pos, partSize);\r\n  ctx.fillStyle = \"green\";\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, partSize / 2, 0, 2 * Math.PI);\r\n  ctx.fill();\r\n};\r\n\r\nexport const Canvas: React.FunctionComponent<CanvasProps> = (props) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const { state, gridSize } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n\r\n    const partSize = CANVAS_SIZE / gridSize;\r\n\r\n    clearCanvas(ctx);\r\n\r\n    state.positions.forEach((player, i) => {\r\n      drawSnake(ctx, partSize, player, i);\r\n    });\r\n    state.food.forEach((pos) => drawFood(ctx, partSize, pos));\r\n  }, [canvasRef, state, gridSize]);\r\n\r\n  return <canvas width={CANVAS_SIZE} height={CANVAS_SIZE} ref={canvasRef} />;\r\n};\r\n","import { Table, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { MetalessGameState } from \"../engine/types\";\r\nimport { getColour } from \"../theme\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport type StateSnapshotProps = {\r\n  frame: MetalessGameState;\r\n  viewedPlayer?: (player: number) => void;\r\n};\r\n\r\nexport const StateSnapshot: React.FunctionComponent<StateSnapshotProps> = ({\r\n  frame,\r\n}) => {\r\n  if (!frame) {\r\n    return null;\r\n  }\r\n  const playerData = new Array(frame.playerAlive.length)\r\n    .fill(null)\r\n    .map((_, i) => {\r\n      return {\r\n        key: `Player ${i}`,\r\n        alive: frame.playerAlive[i],\r\n        lastMove: frame.lastMoves[i],\r\n        position: frame.positions[i],\r\n        playerNumber: i,\r\n      };\r\n    });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Player\",\r\n      dataIndex: \"playerNumber\",\r\n      key: \"playerNumber\",\r\n      render: (number: number) => {\r\n        return (\r\n          <>\r\n            <span\r\n              className=\"dot\"\r\n              style={{ backgroundColor: getColour(number) }}\r\n            ></span>\r\n            Player {number}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Alive\",\r\n      dataIndex: \"alive\",\r\n      key: \"alive\",\r\n      render: (alive: boolean) =>\r\n        alive ? <CheckCircleOutlined /> : <CloseCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Last Move\",\r\n      dataIndex: \"lastMove\",\r\n      key: \"lastMove\",\r\n    },\r\n    {\r\n      title: \"Positions\",\r\n      dataIndex: \"position\",\r\n      key: \"position\",\r\n      render: (position: number) => JSON.stringify(position),\r\n      ellipsis: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Paragraph>Tick: {frame.tick}</Paragraph>\r\n      <Paragraph>Food: {JSON.stringify(frame.food)}</Paragraph>\r\n      <Table\r\n        size=\"small\"\r\n        dataSource={playerData}\r\n        columns={columns}\r\n        pagination={false}\r\n        expandable={{\r\n          expandedRowRender: (record) => (\r\n            <p style={{ margin: 0 }}>{JSON.stringify(record.position)}</p>\r\n          ),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Col, Row, Slider } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { GameHistory } from \"../engine/types\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport { StateSnapshot } from \"./Snapshot\";\r\n\r\nexport type ViewerProps = {\r\n  history?: GameHistory;\r\n};\r\n\r\nexport const Viewer: React.FunctionComponent<ViewerProps> = (props) => {\r\n  const { history } = props;\r\n  const [tick, setTick] = useState(0);\r\n  const sliderChange = useCallback((value) => setTick(value), [setTick]);\r\n\r\n  if (!history) {\r\n    return <div>Error: No history loaded?!</div>;\r\n  }\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={12}>\r\n        <Canvas state={history.ticks[tick]} gridSize={history.gridSize} />\r\n        <Slider\r\n          style={{ width: \"400px\", marginLeft: 0, marginRight: 0 }}\r\n          value={tick}\r\n          min={0}\r\n          max={history.tickCount - 1}\r\n          onChange={sliderChange}\r\n        />\r\n      </Col>\r\n      <Col span={12}>\r\n        <StateSnapshot frame={history.ticks[tick]} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import { Button, Divider, message, Modal, Table, TableProps, Tag, Tooltip, Typography } from \"antd\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { DeleteOutlined, DownloadOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport { GameHistory, GameResult } from \"../engine/types\";\r\nimport { clearHistories, getHistories, removeHistory } from \"../store\";\r\nimport { createDownloadHref } from \"../store/download\";\r\nimport { Viewer } from \"../viewer/Viewer\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\ntype DeleteAllModalProps = {\r\n  onDelete: () => void;\r\n};\r\nconst DeleteAllModal: React.FunctionComponent<DeleteAllModalProps> = ({\r\n  onDelete,\r\n}) => {\r\n  const openModal = useCallback(() => {\r\n    Modal.warning({\r\n      title: \"Are you sure you want to delete all game replays?\",\r\n      closable: true,\r\n      okText: \"Delete all\",\r\n      okCancel: true,\r\n      okButtonProps: {\r\n        danger: true,\r\n        type: \"primary\",\r\n      },\r\n      content: (\r\n        <Paragraph>\r\n          Are you sure you want to delete all game replays? This can not be\r\n          undone.\r\n        </Paragraph>\r\n      ),\r\n      onOk: onDelete,\r\n    });\r\n  }, [onDelete]);\r\n\r\n  return (\r\n    <Button icon={<DeleteOutlined />} onClick={openModal} danger type=\"text\">\r\n      Delete all histories\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nexport type ViewerPageProps = {};\r\n\r\nexport const ViewerPage: React.FunctionComponent<ViewerPageProps> = () => {\r\n  const routerHistory = useHistory();\r\n  const [savedGames, setSavedGames] = useState<GameHistory[]>(\r\n    getHistories().reverse()\r\n  );\r\n  const [loadedHistory, setLoadedHistory] = useState<GameHistory | undefined>();\r\n  const query = useQuery();\r\n\r\n  const deleteAll = useCallback(() => {\r\n    setLoadedHistory(undefined);\r\n    clearHistories();\r\n    setSavedGames(getHistories());\r\n    routerHistory.push(\"/viewer\");\r\n  }, [setLoadedHistory, routerHistory]);\r\n\r\n  useEffect(() => {\r\n    const id = query.get(\"gameId\");\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    if (id === \"latest\") {\r\n      setLoadedHistory(savedGames[0]);\r\n      return;\r\n    }\r\n\r\n    const selected = savedGames.find((h) => h.gameId === id);\r\n    if (selected) {\r\n      setLoadedHistory(selected);\r\n      return;\r\n    }\r\n\r\n    message.error(`Could not find game ${id}`);\r\n  }, [savedGames, setLoadedHistory, query]);\r\n\r\n  const dataSource = useMemo(() => {\r\n    return savedGames.map((game) => {\r\n      return {\r\n        ...game,\r\n        key: game.gameId,\r\n      };\r\n    });\r\n  }, [savedGames]);\r\n\r\n  const columns: TableProps<GameHistory>[\"columns\"] = [\r\n    {\r\n      title: \"Timestamp\",\r\n      dataIndex: \"timeStamp\",\r\n      key: \"timeStamp\",\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a, b: GameHistory) =>\r\n          new Date(a.timeStamp).valueOf() - new Date(b.timeStamp).valueOf(),\r\n        multiple: 1,\r\n      },\r\n      render: (timeStamp: string) => {\r\n        return <span>{new Date(timeStamp).toString()}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Result\",\r\n      dataIndex: \"result\",\r\n      key: \"result\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.result.localeCompare(b.result),\r\n        multiple: 2,\r\n      },\r\n      render(value: GameResult, record) {\r\n        const player = record.winner;\r\n        const colour =\r\n          value === GameResult.WINNER\r\n            ? \"green\"\r\n            : value === GameResult.DRAW\r\n            ? \"blue\"\r\n            : \"red\";\r\n        return (\r\n          <>\r\n            <Tag color={colour}>{value}</Tag>\r\n            {player !== -1 && <span>Player {player}</span>}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Player count\",\r\n      dataIndex: \"playerCount\",\r\n      key: \"playerCount\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.playerCount - b.playerCount,\r\n        multiple: 4,\r\n      },\r\n    },\r\n    {\r\n      title: \"Tick count\",\r\n      dataIndex: \"tickCount\",\r\n      key: \"tickCount\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) => a.tickCount - b.tickCount,\r\n        multiple: 5,\r\n      },\r\n    },\r\n    {\r\n      title: \"Grid size\",\r\n      dataIndex: \"gridSize\",\r\n      key: \"gridSize\",\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) => a.gridSize - b.gridSize,\r\n        multiple: 6,\r\n      },\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"gameId\",\r\n      key: \"gameId\",\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a: GameHistory, b: GameHistory) =>\r\n          a.gameId.localeCompare(b.gameId),\r\n        multiple: 7,\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (_, record: any) => {\r\n        const { key, humanDate, ...rest } = record;\r\n        const downloadProps = createDownloadHref(rest);\r\n        return (\r\n          <>\r\n            <Tooltip title=\"View\">\r\n              <Link to={`/viewer?gameId=${rest.gameId}`}>\r\n                <Button icon={<EyeOutlined />} />\r\n              </Link>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Download\">\r\n              <Button icon={<DownloadOutlined />} {...downloadProps} />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <Button\r\n                onClick={() => {\r\n                  removeHistory(record.gameId);\r\n                  setSavedGames(getHistories());\r\n                  if (loadedHistory && loadedHistory.gameId === record.gameId) {\r\n                    setLoadedHistory(undefined);\r\n                    routerHistory.push(\"/viewer\");\r\n                  }\r\n                }}\r\n                icon={<DeleteOutlined />}\r\n              />\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Title>Game Viewer</Title>\r\n\r\n      {loadedHistory && <Viewer history={loadedHistory} />}\r\n\r\n      <Divider>Saved Rounds</Divider>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={{\r\n          pageSize: 10,\r\n          position: [\"topRight\", \"bottomRight\"],\r\n          showTotal: (total) => `${total} games`,\r\n        }}\r\n      />\r\n\r\n      <DeleteAllModal onDelete={deleteAll} />\r\n    </>\r\n  );\r\n};\r\n","import \"antd/dist/antd.css\";\nimport \"./App.less\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { DocsPage } from \"./pages/docs/docs\";\nimport { GameRunner } from \"./pages/game/GameRunner\";\nimport { HomePage } from \"./pages/Home\";\nimport { ContentPart } from \"./pages/parts/Content\";\nimport { FooterPart } from \"./pages/parts/Footer\";\nimport { HeaderPart } from \"./pages/parts/Header\";\nimport { ControllerTesterPage } from \"./pages/Tester\";\nimport { ViewerPage } from \"./pages/Viewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <HeaderPart />\n        <ContentPart>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/game\" component={GameRunner} />\n            <Route path=\"/viewer\" component={ViewerPage} />\n            <Route path=\"/tester\" component={ControllerTesterPage} />\n            <Route path=\"/docs\" component={DocsPage} />\n          </Switch>\n        </ContentPart>\n        <FooterPart />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
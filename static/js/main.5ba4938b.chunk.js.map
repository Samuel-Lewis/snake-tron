{"version":3,"sources":["engine/types.ts","controller/adapters/rest.tsx","controller/types.ts","pages/game/ControllerCreator.tsx","engine/utils.ts","pages/game/GameRunner.tsx","engine/game.ts","pages/game/Run.tsx","pages/game/Setup.tsx","pages/Home.tsx","pages/parts/Content.tsx","pages/parts/Footer.tsx","pages/parts/Header.tsx","pages/Tester.tsx","pages/Viewer.tsx","App.tsx","index.tsx"],"names":["Move","headers","RestController","url","init","payload","a","axios","post","response","data","update","state","this","RestControllerSelector","setController","position","inputCallback","useCallback","event","controller","target","value","Item","label","name","prefix","GlobalOutlined","onChange","isController","ControllerCreator","onControllerChange","onNext","controllers","useMemo","selectCallback","pos","filter","type","onClick","SetupStage","randomPos","bounds","Math","floor","random","gameHistorySummarise","history","length","error","errorMessage","meta","winner","playerAlive","findIndex","p","ticks","map","h","omit","tickCount","defaultOptions","gridSize","maxTicks","Game","options","gameState","controllersReady","initState","Array","fill","Promise","all","c","i","playerNumber","gameId","playerCount","every","r","Error","JSON","stringify","allStates","tick","cloneDeep","newState","push","positions","lastMoves","food","uuidv4","uniquePos","poss","controllerMoves","apply","oldState","forEach","move","player","currentHead","moveVec","NORTH","SOUTH","EAST","WEST","moveToVector2d","newHead","some","x","y","pop","unshift","Paragraph","Typography","Run","props","onCancel","onPrev","game","setState","initControllers","then","catch","err","controllerError","message","console","log","showIcon","status","danger","React","Component","GameSetup","onConfigChange","useState","setGridSize","setMaxTicks","changeCallback","onMaxTicksChange","onGridSizeChange","useEffect","min","max","defaultValue","Step","Steps","Title","GameRunner","CONTROLLER_CREATOR","currentStage","setCurrentStage","setControllers","setOptions","creatorCallback","nextCallback","SUMMARY","prevCallback","current","title","GAME_SETUP","PLAYING","HomePage","Content","Layout","ContentPart","className","children","Footer","FooterPart","href","Header","HeaderPart","theme","mode","to","TabPane","Tabs","sampleIniData","sampleStateData","ControllerTesterPage","setResponse","sendData","setSendData","loaderCallback","newController","gameIniButton","e","stateSendButton","defaultActiveKey","tab","gutter","span","ViewerPage","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba4938b.chunk.js","sourcesContent":["export type GameOptions = {\r\n  gridSize: number;\r\n  maxTicks: number;\r\n};\r\n\r\nexport type GameHistory =\r\n  | {\r\n      error: false;\r\n      tickCount: number;\r\n      ticks: Omit<GameState, \"meta\">[];\r\n      winner: number;\r\n      gridSize: number;\r\n      playerCount: number;\r\n      gameId: string;\r\n    }\r\n  | { error: true; errorMessage: string };\r\n\r\nexport type GameOptionsOptionals = {};\r\n\r\nexport enum Move {\r\n  NORTH = \"N\",\r\n  SOUTH = \"S\",\r\n  EAST = \"E\",\r\n  WEST = \"W\",\r\n}\r\n\r\nexport type Pos = [number, number];\r\n\r\nexport type GameState = {\r\n  tick: number;\r\n  positions: Array<Pos[]>;\r\n  food: Pos[];\r\n  playerAlive: boolean[];\r\n  lastMoves: Move[];\r\n  meta: {\r\n    gridSize: number;\r\n    playerCount: number;\r\n    gameId: string;\r\n  };\r\n};\r\n","import { Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback } from \"react\";\r\nimport { GlobalOutlined } from \"@ant-design/icons\";\r\nimport { GameState } from \"../../engine/types\";\r\nimport { Controller, ControllerSelectorProps, InitPayload } from \"../types\";\r\n\r\nconst headers = { \"Access-Control-Allow-Origin\": \"*\" };\r\n\r\nexport class RestController implements Controller {\r\n  private url: string;\r\n\r\n  constructor(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  init = async (payload: InitPayload) => {\r\n    const response = await axios.post(this.url, payload, { headers });\r\n    return response.data;\r\n  };\r\n\r\n  update = async (state: GameState) => {\r\n    const response = await axios.post(this.url, state, { headers });\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport const RestControllerSelector: React.FunctionComponent<ControllerSelectorProps> =\r\n  ({ setController, position }) => {\r\n    const inputCallback = useCallback(\r\n      (event) => {\r\n        const controller = new RestController(event.target.value);\r\n        setController(controller);\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    return (\r\n      <Form.Item label=\"Address\" name={position}>\r\n        <Input prefix={<GlobalOutlined />} onChange={inputCallback} />\r\n      </Form.Item>\r\n    );\r\n  };\r\n","import { GameState, Move } from \"../engine/types\";\r\n\r\nexport type InitPayload = {\r\n  gameId: string;\r\n  gridSize: number;\r\n  playerCount: number;\r\n  playerNumber: number;\r\n};\r\n\r\nexport interface Controller {\r\n  init: (initPayload: InitPayload) => Promise<void>;\r\n  update: (state: GameState) => Promise<Move>;\r\n}\r\n\r\nexport type ControllerSelectorProps = {\r\n  setController: (controller: Controller) => void;\r\n  position?: number;\r\n};\r\n\r\nexport const isController = (\r\n  controller: Controller | undefined\r\n): controller is Controller => {\r\n  return !!controller;\r\n};\r\n","import { Button, Form } from \"antd\";\r\nimport React, { useCallback, useMemo } from \"react\";\r\nimport { RestControllerSelector } from \"../../controller/adapters/rest\";\r\nimport { Controller, isController } from \"../../controller/types\";\r\n\r\nexport type ControllerCreatorProps = {\r\n  onControllerChange: (controllers: Controller[]) => void;\r\n  onNext: () => void;\r\n};\r\n\r\nexport const ControllerCreator: React.FunctionComponent<ControllerCreatorProps> =\r\n  ({ onControllerChange, onNext }) => {\r\n    const controllers: Array<Controller | undefined> = useMemo(() => [], []);\r\n\r\n    const selectCallback = useCallback(\r\n      (pos) => (controller: Controller) => {\r\n        controllers[pos] = controller;\r\n        onControllerChange(controllers.filter(isController));\r\n      },\r\n      [onControllerChange, controllers]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Form>\r\n          <RestControllerSelector setController={selectCallback(0)} />\r\n          <RestControllerSelector setController={selectCallback(1)} />\r\n        </Form>\r\n\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Next\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n","import { omit } from \"lodash\";\r\nimport { GameHistory, GameState, Move, Pos } from \"./types\";\r\n\r\nexport const randomPos = (bounds: number): Pos => {\r\n  return [\r\n    Math.floor(Math.random() * bounds),\r\n    Math.floor(Math.random() * bounds),\r\n  ];\r\n};\r\n\r\nexport const moveToVector2d = (move: Move): [number, number] => {\r\n  const vecs: { [key: string]: [number, number] } = {\r\n    [Move.NORTH]: [0, -1],\r\n    [Move.SOUTH]: [0, 1],\r\n    [Move.EAST]: [1, 0],\r\n    [Move.WEST]: [-1, 0],\r\n  };\r\n  return vecs[move];\r\n};\r\n\r\nexport const withinBounds = (pos: Pos, bounds: number): boolean => {\r\n  return pos.every((p) => p >= 0 && p < bounds);\r\n};\r\n\r\nexport const gameHistorySummarise = (history: GameState[]): GameHistory => {\r\n  if (history.length === 0) {\r\n    return {\r\n      error: true,\r\n      errorMessage: \"No moves made\",\r\n    };\r\n  }\r\n\r\n  const meta = history[0].meta;\r\n  const winner = history[history.length - 1].playerAlive.findIndex((p) => p);\r\n  const ticks = history.map((h) => omit(h, [\"meta\"]));\r\n  return {\r\n    ...meta,\r\n    tickCount: ticks.length,\r\n    ticks,\r\n    winner,\r\n    error: false,\r\n  };\r\n};\r\n","import { Steps, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { GameOptions } from \"../../engine/types\";\r\nimport { ControllerCreator } from \"./ControllerCreator\";\r\nimport { Run } from \"./Run\";\r\nimport { GameSetup } from \"./Setup\";\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nexport type GamePageProps = {};\r\n\r\nenum SetupStage {\r\n  CONTROLLER_CREATOR,\r\n  GAME_SETUP,\r\n  PLAYING,\r\n  SUMMARY,\r\n}\r\n\r\nexport const GameRunner: React.FunctionComponent<GamePageProps> = () => {\r\n  const [currentStage, setCurrentStage] = useState(\r\n    SetupStage.CONTROLLER_CREATOR\r\n  );\r\n\r\n  const [controllers, setControllers] = useState<Controller[]>([]);\r\n  const [options, setOptions] = useState<GameOptions | undefined>();\r\n\r\n  const creatorCallback = useCallback(\r\n    (controllers) => {\r\n      setControllers(controllers);\r\n    },\r\n    [setControllers]\r\n  );\r\n\r\n  const onConfigChange = useCallback(\r\n    (options) => {\r\n      setOptions(options);\r\n    },\r\n    [setOptions]\r\n  );\r\n\r\n  const nextCallback = useCallback(() => {\r\n    setCurrentStage(Math.min(currentStage + 1, SetupStage.SUMMARY));\r\n  }, [currentStage, setCurrentStage]);\r\n  const prevCallback = useCallback(() => {\r\n    setCurrentStage(Math.max(currentStage - 1, SetupStage.CONTROLLER_CREATOR));\r\n  }, [currentStage, setCurrentStage]);\r\n\r\n  return (\r\n    <>\r\n      <Title>Play a Game</Title>\r\n      <Steps current={currentStage}>\r\n        <Step title=\"Controller Creator\" />\r\n        <Step title=\"Game Setup\" />\r\n        <Step title=\"Running\" />\r\n        <Step title=\"Summary\" />\r\n      </Steps>\r\n\r\n      <br />\r\n      {currentStage === SetupStage.CONTROLLER_CREATOR && (\r\n        <ControllerCreator\r\n          onControllerChange={creatorCallback}\r\n          onNext={nextCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.GAME_SETUP && (\r\n        <GameSetup\r\n          onConfigChange={onConfigChange}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.PLAYING && (\r\n        <Run\r\n          controllers={controllers}\r\n          options={options}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { cloneDeep } from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Controller } from \"../controller/types\";\r\nimport { GameOptions, GameState, Move, Pos } from \"./types\";\r\nimport { gameHistorySummarise, moveToVector2d, randomPos, withinBounds } from \"./utils\";\r\n\r\nconst defaultOptions: GameOptions = {\r\n  gridSize: 50,\r\n  maxTicks: 1000,\r\n};\r\n\r\nexport class Game {\r\n  controllers: Controller[];\r\n  options: GameOptions;\r\n  gameState: GameState;\r\n  controllersReady: boolean[];\r\n\r\n  constructor(controllers: Controller[], options?: GameOptions) {\r\n    this.controllers = controllers;\r\n    this.options = { ...defaultOptions, ...options };\r\n    this.gameState = this.initState(controllers, this.options);\r\n    this.controllersReady = new Array(controllers.length).fill(false);\r\n  }\r\n\r\n  public async initControllers() {\r\n    await Promise.all(\r\n      this.controllers.map(async (c, i) => {\r\n        await c.init({\r\n          playerNumber: i,\r\n          gameId: this.gameState.meta.gameId,\r\n          gridSize: this.gameState.meta.gridSize,\r\n          playerCount: this.gameState.meta.playerCount,\r\n        });\r\n        this.controllersReady[i] = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public async run() {\r\n    if (!this.controllersReady.every((r) => r)) {\r\n      throw new Error(\r\n        \"Controllers are not ready. \" + JSON.stringify(this.controllersReady)\r\n      );\r\n    }\r\n\r\n    const allStates: GameState[] = [];\r\n    while (\r\n      this.gameState.playerAlive.filter((p) => p).length > 1 &&\r\n      this.gameState.tick < this.options.maxTicks\r\n    ) {\r\n      const newState = cloneDeep(await this.update());\r\n      allStates.push(newState);\r\n    }\r\n    return gameHistorySummarise(allStates);\r\n  }\r\n\r\n  private initState(\r\n    controllers: Controller[],\r\n    options: GameOptions\r\n  ): GameState {\r\n    const playerCount = controllers.length;\r\n    const newState: GameState = {\r\n      tick: 0,\r\n      positions: [],\r\n      lastMoves: [],\r\n      food: [],\r\n      playerAlive: new Array(playerCount).fill(true),\r\n      meta: {\r\n        playerCount,\r\n        gameId: uuidv4(),\r\n        gridSize: options.gridSize,\r\n      },\r\n    };\r\n\r\n    newState.positions = this.uniquePos(newState, playerCount).map((p) => [p]);\r\n    newState.food = this.uniquePos(newState, playerCount);\r\n    return newState;\r\n  }\r\n\r\n  private uniquePos(gameState: GameState, positions: number = 1): Pos[] {\r\n    const poss: Pos[] = [];\r\n\r\n    // TODO: actually ensure unique positions\r\n    for (let i = 0; i < positions; i++) {\r\n      const p = randomPos(gameState.meta.gridSize);\r\n      poss.push(p);\r\n    }\r\n\r\n    return poss;\r\n  }\r\n\r\n  public async update() {\r\n    const controllerMoves = await Promise.all(\r\n      this.controllers.map(async (c) => await c.update(this.gameState))\r\n    );\r\n\r\n    const newState = this.apply(this.gameState, controllerMoves);\r\n    this.gameState = newState;\r\n    return this.gameState;\r\n  }\r\n\r\n  private apply(oldState: GameState, controllerMoves: Move[]): GameState {\r\n    const newState = { ...oldState };\r\n\r\n    newState.tick = oldState.tick + 1;\r\n\r\n    controllerMoves.forEach((move, player) => {\r\n      const currentHead = oldState.positions[player][0];\r\n      const moveVec = moveToVector2d(move);\r\n      const newHead = [\r\n        currentHead[0] + moveVec[0],\r\n        currentHead[1] + moveVec[1],\r\n      ] as Pos;\r\n\r\n      newState.lastMoves[player] = move;\r\n\r\n      // Check bounds collision\r\n      if (!withinBounds(newHead, newState.meta.gridSize)) {\r\n        newState.playerAlive[player] = false;\r\n        return;\r\n      }\r\n\r\n      // Check part collision\r\n      const collided = oldState.positions.some((pos) => {\r\n        return pos.some(([x, y]) => x === newHead[0] && y === newHead[1]);\r\n      });\r\n\r\n      if (collided) {\r\n        newState.playerAlive[player] = false;\r\n        return;\r\n      }\r\n\r\n      // Check food collision\r\n      const ateFood = oldState.food.some((pos) => {\r\n        if (pos[0] === newHead[0] && pos[1] === newHead[1]) {\r\n          newState.food = newState.food.filter((p) => p !== pos);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (!ateFood) {\r\n        newState.positions[player].pop();\r\n      }\r\n      newState.positions[player].unshift(newHead);\r\n    });\r\n\r\n    // Repopulate food\r\n    newState.food.push(\r\n      ...this.uniquePos(\r\n        newState,\r\n        newState.meta.playerCount - newState.food.length\r\n      )\r\n    );\r\n\r\n    return newState;\r\n  }\r\n}\r\n","import { Alert, Button, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { Game } from \"../../engine/game\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport type RunProps = {\r\n  controllers?: Controller[];\r\n  onPrev: () => void;\r\n  options?: GameOptions;\r\n};\r\n\r\nexport type RunState = {\r\n  controllerError?: string;\r\n  controllersReady: boolean;\r\n  game?: Game;\r\n};\r\n\r\nexport class Run extends React.Component<RunProps, RunState> {\r\n  constructor(props: RunProps) {\r\n    super(props);\r\n    this.state = {\r\n      controllersReady: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { controllers, options } = this.props;\r\n    if (!controllers) {\r\n      return;\r\n    }\r\n    const game = new Game(controllers, options);\r\n    this.setState({ game });\r\n\r\n    game\r\n      .initControllers()\r\n      .then(() => {\r\n        this.setState({ controllersReady: true });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ controllerError: err.message });\r\n      });\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.onPrev();\r\n  };\r\n\r\n  render() {\r\n    const { controllers, options } = this.props;\r\n    console.log({ controllers, options });\r\n\r\n    if (!controllers || !controllers.length || !options) {\r\n      return (\r\n        <>\r\n          <Alert\r\n            message=\"Something went wrong... There were either no controllers or no options specified\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n          <Paragraph>\r\n            Controllers:\r\n            <pre>{JSON.stringify(controllers, null, 2)}</pre>\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Options:\r\n            <pre>{JSON.stringify(options, null, 2)}</pre>\r\n          </Paragraph>\r\n          <Button onClick={this.onCancel}>Previous</Button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    const { game, controllersReady, controllerError } = this.state;\r\n\r\n    let status = null;\r\n\r\n    if (!game) {\r\n      status = \"No game...?\";\r\n    } else if (controllerError) {\r\n      status = \"Controller error! \" + controllerError;\r\n    } else if (!controllersReady) {\r\n      status = \"Initializing controllers...\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Paragraph>{status}</Paragraph>\r\n        <Button onClick={this.onCancel} danger>\r\n          Cancel\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Button, Form, InputNumber, Space } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nexport type GameSetupProps = {\r\n  onConfigChange: (options: GameOptions) => void;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const GameSetup: React.FunctionComponent<GameSetupProps> = ({\r\n  onConfigChange,\r\n  onNext,\r\n  onPrev,\r\n}) => {\r\n  const [gridSize, setGridSize] = React.useState(50);\r\n  const [maxTicks, setMaxTicks] = React.useState(1000);\r\n\r\n  const changeCallback = useCallback(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  const onMaxTicksChange = useCallback(\r\n    (value: number) => {\r\n      setMaxTicks(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setMaxTicks]\r\n  );\r\n\r\n  const onGridSizeChange = useCallback(\r\n    (value: number) => {\r\n      setGridSize(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setGridSize]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Item label=\"Max ticks\">\r\n          <InputNumber\r\n            min={100}\r\n            max={10000}\r\n            defaultValue={1000}\r\n            value={maxTicks}\r\n            onChange={onMaxTicksChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Grid size\">\r\n          <InputNumber\r\n            min={10}\r\n            max={1000}\r\n            defaultValue={50}\r\n            value={gridSize}\r\n            onChange={onGridSizeChange}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Space>\r\n        <Button onClick={onPrev}>Previous</Button>\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Start\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type HomePageProps = {};\r\n\r\nexport const HomePage: React.FunctionComponent<HomePageProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Title>Snake Tron - Code Fights!</Title>\r\n\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport type ContentPartProps = {};\r\n\r\nexport const ContentPart: React.FunctionComponent<ContentPartProps> = (\r\n  props\r\n) => {\r\n  return <Content className=\"content\">{props.children}</Content>;\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const FooterPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Footer className=\"footer\">\r\n      Created by <a href=\"http://samuel-lewis.com/\">Samuel Lewis</a>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout, Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\">🐍🏍️</div>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"game\">\r\n          <Link to=\"/game\">Game</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"viewer\">\r\n          <Link to=\"/viewer\">Viewer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"tester\">\r\n          <Link to=\"/tester\">Controller Tester</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import { Button, Col, Divider, Row, Tabs, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RestControllerSelector } from \"../controller/adapters/rest\";\r\nimport { Controller, InitPayload } from \"../controller/types\";\r\nimport { GameState, Move } from \"../engine/types\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst sampleIniData: InitPayload = {\r\n  playerNumber: 2,\r\n  playerCount: 4,\r\n  gameId: \"sample-test\",\r\n  gridSize: 50,\r\n};\r\n\r\nconst sampleStateData: GameState = {\r\n  tick: 2,\r\n  positions: [\r\n    [\r\n      [42, 31],\r\n      [41, 31],\r\n      [40, 31],\r\n    ],\r\n    [\r\n      [47, 27],\r\n      [47, 28],\r\n    ],\r\n  ],\r\n  lastMoves: [Move.NORTH, Move.SOUTH],\r\n  food: [\r\n    [35, 16],\r\n    [17, 6],\r\n  ],\r\n  playerAlive: [true, true],\r\n  meta: {\r\n    playerCount: 2,\r\n    gameId: \"48e2ee9e-171e-45bd-8904-a762d8e2b782\",\r\n    gridSize: 50,\r\n  },\r\n};\r\n\r\nexport type ControllerTesterPageProps = {};\r\n\r\nexport const ControllerTesterPage: React.FunctionComponent<ControllerTesterPageProps> =\r\n  () => {\r\n    const [controller, setController] = useState<Controller | null>(null);\r\n    const [response, setResponse] = useState<string>(\"\");\r\n    const [sendData, setSendData] = useState<string>(\"\");\r\n\r\n    const loaderCallback = useCallback(\r\n      (newController) => {\r\n        setController(newController);\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    const gameIniButton = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleIniData, null, 2));\r\n      controller\r\n        ?.init(sampleIniData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const stateSendButton = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.update(sampleStateData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    return (\r\n      <>\r\n        <Title>Controller Tester</Title>\r\n\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"Rest\" key=\"1\">\r\n            <RestControllerSelector setController={loaderCallback} />\r\n          </TabPane>\r\n        </Tabs>\r\n\r\n        <Button onClick={gameIniButton}>Test game initialise</Button>\r\n        <Button onClick={stateSendButton}>Test game update</Button>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Divider>Sent</Divider>\r\n            <Paragraph>{sendData && <pre>{sendData}</pre>}</Paragraph>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Divider>Response</Divider>\r\n            <Paragraph>{response && <pre>{response}</pre>}</Paragraph>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type ViewerPageProps = {};\r\n\r\nexport const ViewerPage: React.FunctionComponent<ViewerPageProps> = () => {\r\n  return (\r\n    <>\r\n      <Title>Game Viewer</Title>\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import \"antd/dist/antd.css\";\nimport \"./App.less\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { GameRunner } from \"./pages/game/GameRunner\";\nimport { HomePage } from \"./pages/Home\";\nimport { ContentPart } from \"./pages/parts/Content\";\nimport { FooterPart } from \"./pages/parts/Footer\";\nimport { HeaderPart } from \"./pages/parts/Header\";\nimport { ControllerTesterPage } from \"./pages/Tester\";\nimport { ViewerPage } from \"./pages/Viewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <HeaderPart />\n        <ContentPart>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/game\">\n              <GameRunner />\n            </Route>\n            <Route path=\"/viewer\">\n              <ViewerPage />\n            </Route>\n            <Route path=\"/tester\">\n              <ControllerTesterPage />\n            </Route>\n          </Switch>\n        </ContentPart>\n        <FooterPart />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
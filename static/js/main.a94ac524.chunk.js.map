{"version":3,"sources":["engine/types.ts","pages/Game/SelectControllers.tsx","engine/utils.ts","pages/Game/Game.tsx","engine/game.ts","sample-controllers/random.ts","pages/Game/GameRunner.tsx","pages/Game/Summary.tsx","pages/Home.tsx","pages/parts/Footer.tsx","pages/parts/Header.tsx","pages/parts/Content.tsx","pages/Viewer.tsx","App.tsx","index.tsx"],"names":["Move","Option","Select","SelectControllers","props","useState","numControllers","setNumControllers","onFinish","useCallback","r","onSubmit","Object","values","onNumChange","formItems","Array","fill","map","_","i","Item","name","label","rules","required","placeholder","allowClear","value","min","defaultValue","onChange","initialValues","remember","type","htmlType","SetupStage","randomPos","bounds","Math","floor","random","defaultOptions","gridSize","maxTicks","Game","controllers","options","gameState","this","initState","initControllers","allStates","playerAlive","filter","p","length","tick","state","cloneDeep","update","push","history","error","errorMessage","meta","winner","findIndex","ticks","h","omit","tickCount","gameHistorySummarise","playerCount","newState","positions","lastMoves","food","gameId","uuidv4","uniquePos","poss","controllerMoves","c","apply","oldState","forEach","move","player","pos","currentHead","moveVec","NORTH","SOUTH","EAST","WEST","moveToVector2d","newHead","every","some","x","y","pop","unshift","RandomController","init","GameRunner","controllerNames","onComplete","useEffect","game","run","size","Paragraph","Typography","Panel","Collapse","Summary","gameHistory","onClick","timestamp","Date","toISOString","fileName","a","document","createElement","file","Blob","JSON","stringify","href","URL","createObjectURL","download","click","downloadData","header","Step","Steps","GamePage","SELECTING","setupStage","setSetupStage","setControllers","setHistory","selectControllersCallback","PLAYING","onCompleteCallback","FINISHED","content","current","title","HomePage","Footer","Layout","FooterPart","style","textAlign","Title","Header","HeaderPart","className","float","theme","mode","to","Content","ContentPart","padding","height","children","ViewerPage","App","exact","path","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.a94ac524.chunk.js","sourcesContent":["export type GameOptions = {\r\n  gridSize: number;\r\n  maxTicks: number;\r\n};\r\n\r\nexport type GameHistory =\r\n  | {\r\n      error: false;\r\n      tickCount: number;\r\n      ticks: Omit<GameState, \"meta\">[];\r\n      winner: number;\r\n      gridSize: number;\r\n      playerCount: number;\r\n      gameId: string;\r\n    }\r\n  | { error: true; errorMessage: string };\r\n\r\nexport type GameOptionsOptionals = {};\r\n\r\nexport enum Move {\r\n  NORTH = \"N\",\r\n  SOUTH = \"S\",\r\n  EAST = \"E\",\r\n  WEST = \"W\",\r\n}\r\n\r\nexport type Pos = [number, number];\r\n\r\nexport type GameState = {\r\n  tick: number;\r\n  positions: Array<Pos[]>;\r\n  food: Pos[];\r\n  playerAlive: boolean[];\r\n  lastMoves: Move[];\r\n  meta: {\r\n    gridSize: number;\r\n    playerCount: number;\r\n    gameId: string;\r\n  };\r\n};\r\n\r\nexport interface Controller {\r\n  init: (playerPos: number) => void;\r\n  update: (state: GameState) => Move;\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { Form, Button, InputNumber, Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nexport type SelectControllersProps = {\r\n  onSubmit?: (controllers: Array<string>) => void;\r\n};\r\n\r\nexport const SelectControllers: React.FunctionComponent<SelectControllersProps> =\r\n  (props) => {\r\n    const [numControllers, setNumControllers] = useState(2);\r\n\r\n    const onFinish = useCallback((r) => {\r\n      if (props.onSubmit) {\r\n        props.onSubmit(Object.values(r));\r\n      }\r\n    }, []);\r\n\r\n    const onNumChange = useCallback(\r\n      (r) => {\r\n        setNumControllers(r);\r\n      },\r\n      [setNumControllers]\r\n    );\r\n\r\n    const formItems = new Array(numControllers).fill(0).map((_, i) => (\r\n      <Form.Item\r\n        key={\"formItem\" + i}\r\n        name={`Player ${i}`}\r\n        label={`Player ${i}`}\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Select placeholder=\"Select a controller...\" allowClear>\r\n          <Option value=\"random\">Random</Option>\r\n        </Select>\r\n      </Form.Item>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <InputNumber min={2} defaultValue={2} onChange={onNumChange} />\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n        >\r\n          {formItems}\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  };\r\n","import { Pos, Move, GameState, GameHistory } from \"./types\";\r\nimport { omit } from \"lodash\";\r\n\r\nexport const randomPos = (bounds: number): Pos => {\r\n  return [\r\n    Math.floor(Math.random() * bounds),\r\n    Math.floor(Math.random() * bounds),\r\n  ];\r\n};\r\n\r\nexport const moveToVector2d = (move: Move): [number, number] => {\r\n  const vecs: { [key: string]: [number, number] } = {\r\n    [Move.NORTH]: [0, -1],\r\n    [Move.SOUTH]: [0, 1],\r\n    [Move.EAST]: [1, 0],\r\n    [Move.WEST]: [-1, 0],\r\n  };\r\n  return vecs[move];\r\n};\r\n\r\nexport const withinBounds = (pos: Pos, bounds: number): boolean => {\r\n  return pos.every((p) => p >= 0 && p < bounds);\r\n};\r\n\r\nexport const gameHistorySummarise = (history: GameState[]): GameHistory => {\r\n  if (history.length === 0) {\r\n    return {\r\n      error: true,\r\n      errorMessage: \"No moves made\",\r\n    };\r\n  }\r\n\r\n  const meta = history[0].meta;\r\n  const winner = history[history.length - 1].playerAlive.findIndex((p) => p);\r\n  const ticks = history.map((h) => omit(h, [\"meta\"]));\r\n  return {\r\n    ...meta,\r\n    tickCount: ticks.length,\r\n    ticks,\r\n    winner,\r\n    error: false,\r\n  };\r\n};\r\n","import React, { useCallback, useState } from \"react\";\r\n\r\nimport { Steps } from \"antd\";\r\n\r\nimport { SelectControllers } from \"./SelectControllers\";\r\nimport { GameRunner } from \"./GameRunner\";\r\nimport { Summary } from \"./Summary\";\r\nimport { GameHistory } from \"../../engine/types\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport type GamePageProps = {};\r\n\r\nenum SetupStage {\r\n  SELECTING,\r\n  PLAYING,\r\n  FINISHED,\r\n}\r\n\r\nexport const GamePage: React.FunctionComponent<GamePageProps> = () => {\r\n  const [setupStage, setSetupStage] = useState<SetupStage>(\r\n    SetupStage.SELECTING\r\n  );\r\n\r\n  const [controllers, setControllers] = useState<string[]>([]);\r\n  const [history, setHistory] = useState<GameHistory>({\r\n    error: true,\r\n    errorMessage: \"Game not ini\",\r\n  });\r\n\r\n  const selectControllersCallback = useCallback(\r\n    (r) => {\r\n      setControllers(r);\r\n      setSetupStage(SetupStage.PLAYING);\r\n    },\r\n    [setControllers]\r\n  );\r\n\r\n  const onCompleteCallback = useCallback(\r\n    (r) => {\r\n      setHistory(r);\r\n      setSetupStage(SetupStage.FINISHED);\r\n    },\r\n    [setHistory]\r\n  );\r\n\r\n  let content = null;\r\n  switch (setupStage) {\r\n    case SetupStage.SELECTING:\r\n      content = <SelectControllers onSubmit={selectControllersCallback} />;\r\n      break;\r\n    case SetupStage.PLAYING:\r\n      content = (\r\n        <GameRunner\r\n          controllerNames={controllers}\r\n          onComplete={onCompleteCallback}\r\n        />\r\n      );\r\n      break;\r\n    case SetupStage.FINISHED:\r\n      content = <Summary gameHistory={history} />;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Run a game</h1>\r\n      <Steps current={setupStage}>\r\n        <Step title=\"Game Setup\" />\r\n        <Step title=\"Simulating\" />\r\n        <Step title=\"Summary\" />\r\n      </Steps>\r\n\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nimport { Controller, GameOptions, GameState, Pos, Move } from \"./types\";\r\nimport {\r\n  gameHistorySummarise,\r\n  moveToVector2d,\r\n  randomPos,\r\n  withinBounds,\r\n} from \"./utils\";\r\n\r\nconst defaultOptions: GameOptions = {\r\n  gridSize: 50,\r\n  maxTicks: 1000,\r\n};\r\n\r\nexport class Game {\r\n  controllers: Controller[];\r\n  options: GameOptions;\r\n  gameState: GameState;\r\n\r\n  constructor(controllers: Controller[], options?: GameOptions) {\r\n    this.controllers = controllers;\r\n    this.options = { ...defaultOptions, ...options };\r\n    this.gameState = this.initState(controllers, this.options);\r\n    this.initControllers(this.gameState);\r\n  }\r\n\r\n  public run() {\r\n    const allStates: GameState[] = [];\r\n    while (\r\n      this.gameState.playerAlive.filter((p) => p).length > 1 &&\r\n      this.gameState.tick < this.options.maxTicks\r\n    ) {\r\n      const state = cloneDeep(this.update());\r\n      allStates.push(state);\r\n    }\r\n    return gameHistorySummarise(allStates);\r\n  }\r\n\r\n  private initControllers(gameState: GameState) {}\r\n\r\n  private initState(\r\n    controllers: Controller[],\r\n    options: GameOptions\r\n  ): GameState {\r\n    const playerCount = controllers.length;\r\n    const newState: GameState = {\r\n      tick: 0,\r\n      positions: [],\r\n      lastMoves: [],\r\n      food: [],\r\n      playerAlive: new Array(playerCount).fill(true),\r\n      meta: {\r\n        playerCount,\r\n        gameId: uuidv4(),\r\n        gridSize: options.gridSize,\r\n      },\r\n    };\r\n\r\n    newState.positions = this.uniquePos(newState, playerCount).map((p) => [p]);\r\n    newState.food = this.uniquePos(newState, playerCount);\r\n    return newState;\r\n  }\r\n\r\n  private uniquePos(gameState: GameState, positions: number = 1): Pos[] {\r\n    const poss: Pos[] = [];\r\n\r\n    // TODO: actually ensure unique positions\r\n    for (let i = 0; i < positions; i++) {\r\n      const p = randomPos(gameState.meta.gridSize);\r\n      poss.push(p);\r\n    }\r\n\r\n    return poss;\r\n  }\r\n\r\n  public update() {\r\n    const controllerMoves = this.controllers.map((c) =>\r\n      c.update(this.gameState)\r\n    );\r\n\r\n    const newState = this.apply(this.gameState, controllerMoves);\r\n    this.gameState = newState;\r\n    return this.gameState;\r\n  }\r\n\r\n  private apply(oldState: GameState, controllerMoves: Move[]): GameState {\r\n    const newState = { ...oldState };\r\n\r\n    newState.tick = oldState.tick + 1;\r\n\r\n    controllerMoves.forEach((move, player) => {\r\n      const currentHead = oldState.positions[player][0];\r\n      const moveVec = moveToVector2d(move);\r\n      const newHead = [\r\n        currentHead[0] + moveVec[0],\r\n        currentHead[1] + moveVec[1],\r\n      ] as Pos;\r\n\r\n      newState.lastMoves[player] = move;\r\n\r\n      // Check bounds collision\r\n      if (!withinBounds(newHead, newState.meta.gridSize)) {\r\n        newState.playerAlive[player] = false;\r\n        return;\r\n      }\r\n\r\n      // Check part collision\r\n      const collided = oldState.positions.some((pos) => {\r\n        return pos.some(([x, y]) => x === newHead[0] && y === newHead[1]);\r\n      });\r\n\r\n      if (collided) {\r\n        newState.playerAlive[player] = false;\r\n        return;\r\n      }\r\n\r\n      // Check food collision\r\n      const ateFood = oldState.food.some((pos) => {\r\n        if (pos[0] === newHead[0] && pos[1] === newHead[1]) {\r\n          newState.food = newState.food.filter((p) => p !== pos);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (!ateFood) {\r\n        newState.positions[player].pop();\r\n      }\r\n      newState.positions[player].unshift(newHead);\r\n    });\r\n\r\n    // Repopulate food\r\n    newState.food.push(\r\n      ...this.uniquePos(\r\n        newState,\r\n        newState.meta.playerCount - newState.food.length\r\n      )\r\n    );\r\n\r\n    return newState;\r\n  }\r\n}\r\n","import { Controller, GameState, Move } from \"../engine/types\";\r\n\r\nexport class RandomController implements Controller {\r\n  init = () => {};\r\n  update = (state: GameState) => {\r\n    return Move.NORTH;\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport { Game } from \"../../engine/game\";\r\nimport { GameHistory, Controller } from \"../../engine/types\";\r\nimport { RandomController } from \"../../sample-controllers/random\";\r\n\r\nexport type GameRunnerProps = {\r\n  controllerNames: string[];\r\n  onComplete: (gameHistory: GameHistory) => void;\r\n};\r\n\r\nexport const GameRunner: React.FunctionComponent<GameRunnerProps> = (props) => {\r\n  const { controllerNames, onComplete } = props;\r\n\r\n  useEffect(() => {\r\n    const controllers = controllerNames.map((name) => {\r\n      if (name === \"random\") {\r\n        return new RandomController();\r\n      }\r\n    });\r\n\r\n    const game = new Game(controllers as Controller[]);\r\n    onComplete(game.run());\r\n  }, [controllerNames, onComplete]);\r\n\r\n  return (\r\n    <div>\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Typography, Button, Collapse } from \"antd\";\r\n\r\nimport { GameState, GameHistory } from \"../../engine/types\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nexport type SummaryProps = {\r\n  gameHistory: GameHistory;\r\n};\r\n\r\nconst downloadData = (gameHistory: GameHistory) => {\r\n  const timestamp = new Date().toISOString();\r\n  const fileName = `${timestamp}_summary.json`;\r\n\r\n  const a = document.createElement(\"a\");\r\n  const file = new Blob([JSON.stringify(gameHistory)], { type: \"text/plain\" });\r\n  a.href = URL.createObjectURL(file);\r\n  a.download = fileName;\r\n  a.click();\r\n};\r\n\r\nexport const Summary: React.FunctionComponent<SummaryProps> = (props) => {\r\n  const { gameHistory } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={() => downloadData(gameHistory)}>\r\n        Download\r\n      </Button>\r\n      <Collapse>\r\n        <Panel header=\"Full Game History\" key=\"1\">\r\n          <Paragraph>\r\n            <pre>{JSON.stringify(gameHistory, null, 2)}</pre>\r\n          </Paragraph>\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport type HomePageProps = {};\r\n\r\nexport const HomePage: React.FunctionComponent<HomePageProps> = (props) => {\r\n  return <div>What, you wanted content? Nah</div>;\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const FooterPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Footer style={{ textAlign: \"center\" }}>\r\n      Created by <a href=\"http://samuel-lewis.com/\">Samuel Lewis</a>\r\n    </Footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Header>\r\n      <div className=\"logo\" style={{ float: \"left\" }}>\r\n        <Title>🐍🏍️</Title>\r\n      </div>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"game\">\r\n          <Link to=\"/game\">Game</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"viewer\">\r\n          <Link to=\"/viewer\">Viewer</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nconst { Content } = Layout;\r\n\r\nexport type ContentPartProps = {};\r\n\r\nexport const ContentPart: React.FunctionComponent<ContentPartProps> = (\r\n  props\r\n) => {\r\n  return (\r\n    <Content style={{ padding: \"50px\", height: \"100%\" }}>\r\n      {props.children}\r\n    </Content>\r\n  );\r\n};\r\n","import React from \"react\";\r\n// import { Viewer } from \"../viewer/Viewer\";\r\n\r\nexport type ViewerPageProps = {};\r\n\r\nexport const ViewerPage: React.FunctionComponent<ViewerPageProps> = () => {\r\n  return <div>Not implemented :D</div>;\r\n};\r\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nimport { Layout } from \"antd\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { GamePage } from \"./pages/Game/Game\";\nimport { HomePage } from \"./pages/Home\";\nimport { FooterPart } from \"./pages/parts/Footer\";\nimport { HeaderPart } from \"./pages/parts/Header\";\nimport { ContentPart } from \"./pages/parts/Content\";\nimport { ViewerPage } from \"./pages/Viewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <HeaderPart />\n        <ContentPart>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/game\">\n              <GamePage />\n            </Route>\n            <Route path=\"/viewer\">\n              <ViewerPage />\n            </Route>\n          </Switch>\n        </ContentPart>\n        <FooterPart />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
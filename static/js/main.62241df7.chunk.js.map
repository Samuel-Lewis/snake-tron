{"version":3,"sources":["pages/game/GameRunner.tsx","controller/adapters/rest.tsx","pages/game/ControllerCreator.tsx","pages/game/Run.tsx","pages/game/Setup.tsx","engine/types.ts","pages/Home.tsx","pages/parts/Content.tsx","pages/parts/Footer.tsx","pages/parts/Header.tsx","pages/Tester.tsx","pages/Viewer.tsx","App.tsx","index.tsx"],"names":["SetupStage","RestController","url","init","payload","a","axios","post","response","data","update","state","this","RestControllerSelector","setController","position","inputCallback","useCallback","event","controller","target","value","Item","label","name","prefix","GlobalOutlined","onChange","isController","ControllerCreator","onControllerChange","onNext","controllers","useMemo","selectCallback","pos","filter","type","onClick","Paragraph","Typography","Run","options","onPrev","onCancel","length","danger","message","showIcon","JSON","stringify","GameSetup","onConfigChange","React","useState","gridSize","setGridSize","maxTicks","setMaxTicks","changeCallback","onMaxTicksChange","onGridSizeChange","useEffect","min","max","defaultValue","Step","Steps","Title","Move","GameRunner","CONTROLLER_CREATOR","currentStage","setCurrentStage","setControllers","setOptions","creatorCallback","nextCallback","Math","SUMMARY","prevCallback","current","title","GAME_SETUP","PLAYING","HomePage","props","Content","Layout","ContentPart","className","children","Footer","FooterPart","href","Header","HeaderPart","theme","mode","to","TabPane","Tabs","sampleIniData","playerNumber","playerCount","gameId","sampleStateData","tick","positions","lastMoves","NORTH","SOUTH","food","playerAlive","meta","ControllerTesterPage","setResponse","sendData","setSendData","loaderCallback","newController","gameIniButton","then","r","catch","e","stateSendButton","defaultActiveKey","tab","gutter","span","ViewerPage","App","exact","path","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.62241df7.chunk.js","sourcesContent":["import { Steps, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { GameOptions } from \"../../engine/types\";\r\nimport { ControllerCreator } from \"./ControllerCreator\";\r\nimport { Run } from \"./Run\";\r\nimport { GameSetup } from \"./Setup\";\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nexport type GamePageProps = {};\r\n\r\nenum SetupStage {\r\n  CONTROLLER_CREATOR,\r\n  GAME_SETUP,\r\n  PLAYING,\r\n  SUMMARY,\r\n}\r\n\r\nexport const GameRunner: React.FunctionComponent<GamePageProps> = () => {\r\n  const [currentStage, setCurrentStage] = useState(\r\n    SetupStage.CONTROLLER_CREATOR\r\n  );\r\n\r\n  const [controllers, setControllers] = useState<Controller[]>([]);\r\n  const [options, setOptions] = useState<GameOptions | undefined>();\r\n\r\n  const creatorCallback = useCallback(\r\n    (controllers) => {\r\n      setControllers(controllers);\r\n    },\r\n    [setControllers]\r\n  );\r\n\r\n  const onConfigChange = useCallback(\r\n    (options) => {\r\n      setOptions(options);\r\n    },\r\n    [setOptions]\r\n  );\r\n\r\n  const nextCallback = useCallback(() => {\r\n    setCurrentStage(Math.min(currentStage + 1, SetupStage.SUMMARY));\r\n  }, [currentStage, setCurrentStage]);\r\n  const prevCallback = useCallback(() => {\r\n    setCurrentStage(Math.max(currentStage - 1, SetupStage.CONTROLLER_CREATOR));\r\n  }, [currentStage, setCurrentStage]);\r\n\r\n  return (\r\n    <>\r\n      <Title>Play a Game</Title>\r\n      <Steps current={currentStage}>\r\n        <Step title=\"Controller Creator\" />\r\n        <Step title=\"Game Setup\" />\r\n        <Step title=\"Running\" />\r\n        <Step title=\"Summary\" />\r\n      </Steps>\r\n\r\n      <br />\r\n      {currentStage === SetupStage.CONTROLLER_CREATOR && (\r\n        <ControllerCreator\r\n          onControllerChange={creatorCallback}\r\n          onNext={nextCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.GAME_SETUP && (\r\n        <GameSetup\r\n          onConfigChange={onConfigChange}\r\n          onNext={nextCallback}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n      {currentStage === SetupStage.PLAYING && (\r\n        <Run\r\n          controllers={controllers}\r\n          options={options}\r\n          onPrev={prevCallback}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback } from \"react\";\r\nimport { GlobalOutlined } from \"@ant-design/icons\";\r\nimport { GameState } from \"../../engine/types\";\r\nimport { Controller, ControllerSelectorProps, InitPayload } from \"../types\";\r\n\r\nexport class RestController implements Controller {\r\n  private url: string;\r\n\r\n  constructor(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  init = async (payload: InitPayload) => {\r\n    const response = await axios.post(this.url, payload);\r\n    return response.data;\r\n  };\r\n\r\n  update = async (state: GameState) => {\r\n    const response = await axios.post(this.url, state);\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport const RestControllerSelector: React.FunctionComponent<ControllerSelectorProps> =\r\n  ({ setController, position }) => {\r\n    const inputCallback = useCallback(\r\n      (event) => {\r\n        const controller = new RestController(event.target.value);\r\n        setController(controller);\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    return (\r\n      <Form.Item label=\"Address\" name={position}>\r\n        <Input prefix={<GlobalOutlined />} onChange={inputCallback} />\r\n      </Form.Item>\r\n    );\r\n  };\r\n","import { Button, Form } from \"antd\";\r\nimport React, { useCallback, useMemo } from \"react\";\r\nimport { RestControllerSelector } from \"../../controller/adapters/rest\";\r\nimport { Controller } from \"../../controller/types\";\r\n\r\nexport type ControllerCreatorProps = {\r\n  onControllerChange: (controllers: Controller[]) => void;\r\n  onNext: () => void;\r\n};\r\n\r\nconst isController = (\r\n  controller: Controller | undefined\r\n): controller is Controller => {\r\n  return !!controller;\r\n};\r\n\r\nexport const ControllerCreator: React.FunctionComponent<ControllerCreatorProps> =\r\n  ({ onControllerChange, onNext }) => {\r\n    const controllers: Array<Controller | undefined> = useMemo(() => [], []);\r\n\r\n    const selectCallback = useCallback(\r\n      (pos) => (controller: Controller) => {\r\n        controllers[pos] = controller;\r\n        onControllerChange(controllers.filter(isController));\r\n      },\r\n      [onControllerChange, controllers]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Form>\r\n          <RestControllerSelector setController={selectCallback(0)} />\r\n          <RestControllerSelector setController={selectCallback(1)} />\r\n        </Form>\r\n\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Next\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n","import { Alert, Button, Typography } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\nimport { Controller } from \"../../controller/types\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport type RunProps = {\r\n  controllers?: Controller[];\r\n  options?: GameOptions;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const Run: React.FunctionComponent<RunProps> = ({\r\n  controllers,\r\n  options,\r\n  onPrev,\r\n}) => {\r\n  const onCancel = useCallback(() => {\r\n    onPrev();\r\n  }, [onPrev]);\r\n\r\n  if (!controllers || !controllers.length || !options) {\r\n    return (\r\n      <>\r\n        <Alert\r\n          message=\"Something went wrong... There were either no controllers or options specified\"\r\n          type=\"error\"\r\n          showIcon\r\n        />\r\n        <Paragraph>\r\n          Controllers:\r\n          <pre>{JSON.stringify(controllers, null, 2)}</pre>\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Options:\r\n          <pre>{JSON.stringify(options, null, 2)}</pre>\r\n        </Paragraph>\r\n        <Button onClick={onCancel}>Previous</Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onCancel} danger>\r\n        Cancel\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Form, InputNumber, Space } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { GameOptions } from \"../../engine/types\";\r\n\r\nexport type GameSetupProps = {\r\n  onConfigChange: (options: GameOptions) => void;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n};\r\n\r\nexport const GameSetup: React.FunctionComponent<GameSetupProps> = ({\r\n  onConfigChange,\r\n  onNext,\r\n  onPrev,\r\n}) => {\r\n  const [gridSize, setGridSize] = React.useState(50);\r\n  const [maxTicks, setMaxTicks] = React.useState(1000);\r\n\r\n  const changeCallback = useCallback(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  const onMaxTicksChange = useCallback(\r\n    (value: number) => {\r\n      setMaxTicks(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setMaxTicks]\r\n  );\r\n\r\n  const onGridSizeChange = useCallback(\r\n    (value: number) => {\r\n      setGridSize(value);\r\n      changeCallback();\r\n    },\r\n    [changeCallback, setGridSize]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onConfigChange({\r\n      gridSize,\r\n      maxTicks,\r\n    });\r\n  }, [onConfigChange, gridSize, maxTicks]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Item label=\"Max ticks\">\r\n          <InputNumber\r\n            min={100}\r\n            max={10000}\r\n            defaultValue={1000}\r\n            value={maxTicks}\r\n            onChange={onMaxTicksChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Grid size\">\r\n          <InputNumber\r\n            min={10}\r\n            max={1000}\r\n            defaultValue={50}\r\n            value={gridSize}\r\n            onChange={onGridSizeChange}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Space>\r\n        <Button onClick={onPrev}>Previous</Button>\r\n        <Button type=\"primary\" onClick={onNext}>\r\n          Start\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n","export type GameOptions = {\r\n  gridSize: number;\r\n  maxTicks: number;\r\n};\r\n\r\nexport type GameHistory =\r\n  | {\r\n      error: false;\r\n      tickCount: number;\r\n      ticks: Omit<GameState, \"meta\">[];\r\n      winner: number;\r\n      gridSize: number;\r\n      playerCount: number;\r\n      gameId: string;\r\n    }\r\n  | { error: true; errorMessage: string };\r\n\r\nexport type GameOptionsOptionals = {};\r\n\r\nexport enum Move {\r\n  NORTH = \"N\",\r\n  SOUTH = \"S\",\r\n  EAST = \"E\",\r\n  WEST = \"W\",\r\n}\r\n\r\nexport type Pos = [number, number];\r\n\r\nexport type GameState = {\r\n  tick: number;\r\n  positions: Array<Pos[]>;\r\n  food: Pos[];\r\n  playerAlive: boolean[];\r\n  lastMoves: Move[];\r\n  meta: {\r\n    gridSize: number;\r\n    playerCount: number;\r\n    gameId: string;\r\n  };\r\n};\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type HomePageProps = {};\r\n\r\nexport const HomePage: React.FunctionComponent<HomePageProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Title>Snake Tron - Code Fights!</Title>\r\n\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport type ContentPartProps = {};\r\n\r\nexport const ContentPart: React.FunctionComponent<ContentPartProps> = (\r\n  props\r\n) => {\r\n  return <Content className=\"content\">{props.children}</Content>;\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const FooterPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Footer className=\"footer\">\r\n      Created by <a href=\"http://samuel-lewis.com/\">Samuel Lewis</a>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout, Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderPart: React.FunctionComponent = () => {\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\">🐍🏍️</div>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"game\">\r\n          <Link to=\"/game\">Game</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"viewer\">\r\n          <Link to=\"/viewer\">Viewer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"tester\">\r\n          <Link to=\"/tester\">Controller Tester</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import { Button, Col, Divider, Row, Tabs, Typography } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RestControllerSelector } from \"../controller/adapters/rest\";\r\nimport { Controller, InitPayload } from \"../controller/types\";\r\nimport { GameState, Move } from \"../engine/types\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst sampleIniData: InitPayload = {\r\n  playerNumber: 2,\r\n  playerCount: 4,\r\n  gameId: \"sample-test\",\r\n  gridSize: 50,\r\n};\r\n\r\nconst sampleStateData: GameState = {\r\n  tick: 2,\r\n  positions: [\r\n    [\r\n      [42, 31],\r\n      [41, 31],\r\n      [40, 31],\r\n    ],\r\n    [\r\n      [47, 27],\r\n      [47, 28],\r\n    ],\r\n  ],\r\n  lastMoves: [Move.NORTH, Move.SOUTH],\r\n  food: [\r\n    [35, 16],\r\n    [17, 6],\r\n  ],\r\n  playerAlive: [true, true],\r\n  meta: {\r\n    playerCount: 2,\r\n    gameId: \"48e2ee9e-171e-45bd-8904-a762d8e2b782\",\r\n    gridSize: 50,\r\n  },\r\n};\r\n\r\nexport type ControllerTesterPageProps = {};\r\n\r\nexport const ControllerTesterPage: React.FunctionComponent<ControllerTesterPageProps> =\r\n  () => {\r\n    const [controller, setController] = useState<Controller | null>(null);\r\n    const [response, setResponse] = useState<string>(\"\");\r\n    const [sendData, setSendData] = useState<string>(\"\");\r\n\r\n    const loaderCallback = useCallback(\r\n      (newController) => {\r\n        setController(newController);\r\n      },\r\n      [setController]\r\n    );\r\n\r\n    const gameIniButton = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleIniData, null, 2));\r\n      controller\r\n        ?.init(sampleIniData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    const stateSendButton = useCallback(() => {\r\n      setSendData(JSON.stringify(sampleStateData, null, 2));\r\n      controller\r\n        ?.update(sampleStateData)\r\n        .then((r) => setResponse(JSON.stringify(r, null, 2)))\r\n        .catch((e) => setResponse(e.message));\r\n    }, [controller, setResponse]);\r\n\r\n    return (\r\n      <>\r\n        <Title>Controller Tester</Title>\r\n\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"Rest\" key=\"1\">\r\n            <RestControllerSelector setController={loaderCallback} />\r\n          </TabPane>\r\n        </Tabs>\r\n\r\n        <Button onClick={gameIniButton}>Test game initialise</Button>\r\n        <Button onClick={stateSendButton}>Test game update</Button>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Divider>Sent</Divider>\r\n            <Paragraph>{sendData && <pre>{sendData}</pre>}</Paragraph>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Divider>Response</Divider>\r\n            <Paragraph>{response && <pre>{response}</pre>}</Paragraph>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n","import { Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport type ViewerPageProps = {};\r\n\r\nexport const ViewerPage: React.FunctionComponent<ViewerPageProps> = () => {\r\n  return (\r\n    <>\r\n      <Title>Game Viewer</Title>\r\n      <Paragraph>What, you thought there would be content?</Paragraph>\r\n    </>\r\n  );\r\n};\r\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { GameRunner } from \"./pages/game/GameRunner\";\nimport { HomePage } from \"./pages/Home\";\nimport { ContentPart } from \"./pages/parts/Content\";\nimport { FooterPart } from \"./pages/parts/Footer\";\nimport { HeaderPart } from \"./pages/parts/Header\";\nimport { ControllerTesterPage } from \"./pages/Tester\";\nimport { ViewerPage } from \"./pages/Viewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <HeaderPart />\n        <ContentPart>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/game\">\n              <GameRunner />\n            </Route>\n            <Route path=\"/viewer\">\n              <ViewerPage />\n            </Route>\n            <Route path=\"/tester\">\n              <ControllerTesterPage />\n            </Route>\n          </Switch>\n        </ContentPart>\n        <FooterPart />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}